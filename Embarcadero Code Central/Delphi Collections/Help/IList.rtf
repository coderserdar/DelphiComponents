{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times{\*\falt Times New Roman};}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica{\*\falt Arial};}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}
{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva{\*\falt Arial};}{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn{\*\falt Times New Roman};}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv{\*\falt Arial};}
{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York{\*\falt Times New Roman};}
{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f16\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f17\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f18\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 10 Pitch;}
{\f19\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 20 Pitch;}{\f20\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 5 Pitch;}{\f21\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 12 Pitch;}
{\f22\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 24 Pitch;}{\f23\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 6 Pitch;}{\f24\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 16.67 Pitch;}
{\f25\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times{\*\falt Times New Roman};}{\f26\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f27\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f29\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f30\fswiss\fcharset0\fprq2{\*\panose 020b0602030504090204}Lucida Sans;}
{\f31\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f32\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f33\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f34\fmodern\fcharset0\fprq1{\*\panose 02010509020102010303}OCR A Extended;}{\f35\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}
{\f37\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f38\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f39\fdecor\fcharset0\fprq2{\*\panose 04040403030d02020704}Matisse ITC;}
{\f40\fdecor\fcharset0\fprq2{\*\panose 04020404030d07020202}Tempus Sans ITC;}{\f41\fdecor\fcharset0\fprq2{\*\panose 04040506030f02020702}Westminster;}{\f42\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}
{\f43\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f44\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Int A;}{\f45\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Int B;}
{\f46\fmodern\fcharset2\fprq1{\*\panose 00000000000000000000}LotusWP Box;}{\f47\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Type;}{\f48\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Icon;}
{\f49\froman\fcharset2\fprq2{\*\panose 00000000000000000000}Math A;}{\f50\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Math B;}{\f51\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Math C;}
{\f52\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode;}{\f53\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f54\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Baskerville;}
{\f55\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Binner Gothic;}{\f56\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Centaur;}{\f57\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}
{\f58\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans;}{\f59\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans Condensed;}{\f60\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans Ultra Bold;}
{\f61\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}{\f62\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}News Gothic;}{\f63\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Nimrod;}
{\f64\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Onyx;}{\f65\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Botanical;}{\f66\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell;}
{\f67\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell Condensed;}{\f68\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell Light;}{\f69\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Brush Script;}
{\f70\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Perpetua;}{\f71\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Lydian;}{\f72\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}News Gothic Condensed;}
{\f73\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Photina Casual Black;}{\f74\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Abadi MT Condensed Extra Bold;}
{\f75\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Microstyle Bold Extended ATT;}{\f76\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Arial Rounded MT Bold;}{\f77\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Verdana Ref;}
{\f78\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}MagicSymbols;}{\f79\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Gamekeys MT;}{\f80\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Microsoft Logo 95;}
{\f81\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}SWlogo;}{\f82\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Condensed;}{\f83\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol;}
{\f84\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f85\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f86\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Trebuchet MS;}
{\f87\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f88\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Agency FB;}{\f89\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}
{\f90\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f91\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}{\f92\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Miriam Fixed;}
{\f93\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Fixed Miriam Transparent;}{\f94\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}{\f95\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Rod;}
{\f96\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 1;}{\f97\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 2;}
{\f98\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Microstyle Bold Extended ATT Tu{\*\falt Times New Roman};}{\f99\froman\fcharset0\fprq0{\*\panose 00000000000000000000}(normal text);}
{\f100\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}News Gothic MT CE;}{\f101\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}News Gothic MT Greek;}{\f102\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}News Gothic MT Tur;}
{\f103\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}News Gothic MT Baltic;}{\f104\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Handwriting CE;}
{\f105\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Greek;}{\f106\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Tur;}
{\f107\fscript\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Baltic;}{\f108\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Sans CE;}{\f109\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Sans Greek;}
{\f110\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Sans Tur;}{\f111\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Sans Baltic;}{\f112\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Int A CE;}
{\f113\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Int A Greek;}{\f114\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Int A Tur;}{\f115\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Int A Baltic;}
{\f116\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Int B CE;}{\f117\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Int B Greek;}{\f118\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Int B Tur;}
{\f119\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Int B Baltic;}{\f120\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Type CE;}{\f121\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Type Greek;}
{\f122\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Type Tur;}{\f123\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Type Baltic;}{\f124\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Icon CE;}
{\f125\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Icon Greek;}{\f126\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Icon Tur;}{\f127\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Icon Baltic;}
{\f128\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode CE;}{\f129\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Greek;}
{\f130\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Tur;}{\f131\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Baltic;}{\f132\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell CE;}
{\f133\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Greek;}{\f134\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Baltic;}{\f135\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell Condensed CE;}
{\f136\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Greek;}{\f137\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Baltic;}
{\f138\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell Light CE;}{\f139\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Light Greek;}{\f140\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Light Tur;}
{\f141\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Light Baltic;}{\f142\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}MagicSymbols CE;}{\f143\fnil\fcharset204\fprq2{\*\panose 00000000000000000000}MagicSymbols Cyr;}
{\f144\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}MagicSymbols Greek;}{\f145\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}MagicSymbols Tur;}{\f146\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}MagicSymbols Baltic;}
{\f147\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}SWlogo CE;}{\f148\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}SWlogo Greek;}{\f149\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}SWlogo Tur;}
{\f150\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}SWlogo Baltic;}{\f151\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol CE;}{\f152\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol Tur;}
{\f153\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Univers CE;}{\f154\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Univers Tur;}{\f155\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Tur;}
{\f156\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Tur;}{\f157\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Verdana Ref CE;}{\f158\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Verdana Ref Cyr;}
{\f159\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Verdana Ref Greek;}{\f160\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Verdana Ref Tur;}{\f161\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Verdana Ref Baltic;}
{\f162\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Univers Condensed CE;}{\f163\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Univers Condensed Tur;}{\f164\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Trebuchet MS CE;}
{\f165\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Trebuchet MS Tur;}{\f166\froman\fcharset238\fprq2 Times New Roman CE;}{\f167\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f169\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f170\froman\fcharset162\fprq2 Times New Roman Tur;}{\f171\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f172\fswiss\fcharset238\fprq2 Arial CE;}{\f173\fswiss\fcharset204\fprq2 Arial Cyr;}{\f175\fswiss\fcharset161\fprq2 Arial Greek;}
{\f176\fswiss\fcharset162\fprq2 Arial Tur;}{\f177\fswiss\fcharset186\fprq2 Arial Baltic;}{\f178\fmodern\fcharset238\fprq1 Courier New CE;}{\f179\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f181\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f182\fmodern\fcharset162\fprq1 Courier New Tur;}{\f183\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f256\fswiss\fcharset238\fprq2 Tahoma CE;}{\f257\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f259\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f260\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f261\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f268\fswiss\fcharset238\fprq2 Arial Black CE;}{\f269\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f271\fswiss\fcharset161\fprq2 Arial Black Greek;}
{\f272\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f273\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f352\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f353\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}
{\f355\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f356\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f358\froman\fcharset238\fprq2 Book Antiqua CE;}{\f359\froman\fcharset204\fprq2 Book Antiqua Cyr;}
{\f361\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f362\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f363\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f364\fswiss\fcharset238\fprq2 Century Gothic CE;}
{\f365\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f367\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f368\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f369\fswiss\fcharset186\fprq2 Century Gothic Baltic;}
{\f418\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f419\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f421\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f422\fmodern\fcharset162\fprq1 Lucida Console Tur;}
{\f484\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f485\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f487\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f488\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f489\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f508\froman\fcharset238\fprq2 Garamond CE;}{\f509\froman\fcharset204\fprq2 Garamond Cyr;}{\f511\froman\fcharset161\fprq2 Garamond Greek;}{\f512\froman\fcharset162\fprq2 Garamond Tur;}{\f513\froman\fcharset186\fprq2 Garamond Baltic;}
{\f670\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f671\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f673\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f674\fscript\fcharset162\fprq2 Comic Sans MS Tur;}
{\f675\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f676\fswiss\fcharset238\fprq2 Impact CE;}{\f677\fswiss\fcharset204\fprq2 Impact Cyr;}{\f679\fswiss\fcharset161\fprq2 Impact Greek;}{\f680\fswiss\fcharset162\fprq2 Impact Tur;}
{\f681\fswiss\fcharset186\fprq2 Impact Baltic;}{\f688\fswiss\fcharset238\fprq2 Verdana CE;}{\f689\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f691\fswiss\fcharset161\fprq2 Verdana Greek;}{\f692\fswiss\fcharset162\fprq2 Verdana Tur;}
{\f693\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid 
\snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 
footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive \f1\fs16\uldb \sbasedon10 SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid 
\sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar
\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 \additive \f1\fs16\ul \sbasedon17 SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 
SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 WindowLink Display;}{\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 
NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 \additive \v\f2\fs20\cf2 \sbasedon10 Code WindowLink Data;}{\*\cs31 \additive \f2\fs20\uldb \sbasedon10 
Code WindowLink Display;}}{\*\listtable{\list\listtemplateid134807553\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid148331751}}{\*\listoverridetable{\listoverride\listid148331751\listoverridecount0\ls1}}{\info{\title Classname}{\author Matthew Greet}{\operator Matthew Greet}{\creatim\yr2003\mo1\dy23\hr17\min9}{\revtim\yr2004\mo5\dy31\hr11\min58}
{\version139}{\edmins187}{\nofpages29}{\nofwords2091}{\nofchars11924}{\*\company  }{\nofcharsws0}{\vern71}}\paperw28350\paperh28350\margl0\margr0\margt0\margb0 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0
{\*\template D:\\Projects\\WinHelp Templates\\Working\\Delphi Interface.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Interface}}K
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ IList;List}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList}}}{IList}{\cs24 
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs23\fs16\ul Hierarchy}{\cs25\v\fs16\ul\cf2 IList_Hierarchy}{        }{\cs17\fs16\uldb Properties}{\cs24\v\fs16\cf2 IList_Properties_ByObj>Inspect}{        }{
\cs17\fs16\uldb Methods}{\cs24\v\fs16\cf2 IList_Methods_ByObj >Inspect}{\cs17\fs16\uldb 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Defines the various addition, removal and search functions of list collections.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Unit
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Collections
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {This interface declares that the implementing class is a list.  Lists access items in a sequential order and 
items can be retrieved by its numbered position.  A sort order can be maintained and duplicates can be blocked.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Known implementing classes
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb IList}{\cs28\v\cf2 IList}{, }{\cs26\uldb TArray}{\cs28\v\cf2 TArray}{, }{\cs26\uldb TPArrayList}{\cs28\v\cf2 TPArrayList}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Hierarchy}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Hierarchy}}}{Hierarchy
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {IUnknown
\par }{\cs26\uldb 
\par ICollection}{\cs28\v\cf2 ICollection>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Properties_ByObj}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Properties}}}{IList properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 IList_Properties_Alpha}{        }{\cs23\fs16\ul Legend}{
\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In IList
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Duplicates}{\cs28\v\cf2 IList_Duplicates>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Items}{\cs28\v\cf2 IList_Items>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Sorted}{\cs28\v\cf2 IList_Sorted>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from ICollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 ICollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 ICollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 ICollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 ICollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 ICollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 ICollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 ICollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 ICollection_Size>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Properties_Alpha}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Properties}}}{IList properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 IList_Properties_ByObj}{        }{\cs23\fs16\ul Legend}{
\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 ICollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 ICollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 ICollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Duplicates}{\cs28\v\cf2 IList_Duplicates>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 ICollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 ICollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Items}{\cs28\v\cf2 IList_Items>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 ICollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 ICollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 ICollection_Size>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Sorted}{\cs28\v\cf2 IList_Sorted>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Duplicates}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Duplicates}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Duplicates}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Duplicates}}}{IList.Duplicates
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Duplicates are allowed.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 property}{\cs22\f2  Duplicates: Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {If true, duplicates items are permitted i.e. an item cannot be added or inserted if it is equal to an existing item, according to collection comparator.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Items}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Items}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Items}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Items}}}{IList.Items
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Item at index.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 property}{\cs22\f2  Items[Index: Integer]: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Item at index.  Return value is nil if index is out of range (and ignore errors is set).  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{
 if index is out of range.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Sorted}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Sorted}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Sorted}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Sorted}}}{IList.Sorted
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Always sorted.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 property}{\cs22\f2  Sorted: Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Always maintains sort order according to collection comparator.  Sort order is maintained if }{\i Add}{ or }{\i Remove}{ methods are used but }{\i Insert}{, }{\i Exchange}{, }{\i 
SetItem}{ or }{\i Sort}{ methods or changing items using }{\i Items}{ property resets sort status.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Methods_ByObj}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Methods}}}{IList methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 IList_Methods_Alpha}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In IList
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb Add(ICollection)}{\cs28\v\cf2 IList_Add(ICollection)>main}{
\par }{\cs26\uldb Add(Item)}{\cs28\v\cf2 IList_Add(Item)>main}{
\par }{\cs26\uldb Add(Array)}{\cs28\v\cf2 IList_Add(Array)>main}{
\par }{\cs26\uldb CloneAsList}{\cs28\v\cf2 IList_CloneAsList>main}{
\par }{\cs26\uldb Delete}{\cs28\v\cf2 IList_Delete>main}{
\par }{\cs26\uldb Exchange}{\cs28\v\cf2 IList_Exchange>main}{
\par }{\cs26\uldb First}{\cs28\v\cf2 IList_First>main}{
\par }{\cs26\uldb GetDuplicates}{\cs28\v\cf2 IList_GetDuplicates>main}{
\par }{\cs26\uldb GetItem}{\cs28\v\cf2 IList_GetItem>main}{
\par }{\cs26\uldb GetSorted}{\cs28\v\cf2 IList_GetSorted>main}{
\par }{\cs26\uldb IndexOf}{\cs28\v\cf2 IList_IndexOf>main}{
\par }{\cs26\uldb Insert(ICollection)}{\cs28\v\cf2 IList_Insert(ICollection)>main}{
\par }{\cs26\uldb Insert(Item)}{\cs28\v\cf2 IList_Insert(Item)>main}{
\par }{\cs26\uldb Insert(Array)}{\cs28\v\cf2 IList_Insert(Array)>main}{
\par }{\cs26\uldb Last}{\cs28\v\cf2 IList_Last>main}{
\par }{\cs26\uldb SetDuplicates}{\cs28\v\cf2 IList_SetDuplicates>main}{
\par }{\cs26\uldb SetItem}{\cs28\v\cf2 IList_SetItem>main}{
\par }{\cs26\uldb SetSorted}{\cs28\v\cf2 IList_SetSorted>main}{
\par }{\cs26\uldb Sort(Comparator)}{\cs28\v\cf2 IList_Sort(Comparator)>main}{
\par }{\cs26\uldb Sort(CompareFunc)}{\cs28\v\cf2 IList_Sort(CompareFunc)>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from ICollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb Clear}{\cs28\v\cf2 ICollection_Clear>main}{
\par }{\cs26\uldb Clone}{\cs28\v\cf2 ICollection_Clone>main}{
\par }{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 ICollection_Contains(ICollection)>main}{
\par }{\cs26\uldb Contains(Item)}{\cs28\v\cf2 ICollection_Contains(Item)>main}{
\par }{\cs26\uldb Contains(Array)}{\cs28\v\cf2 ICollection_Contains(Array)>main}{
\par }{\cs26\uldb Equals}{\cs28\v\cf2 ICollection_Equals>main}{
\par }{\cs26\uldb Find(Filter)}{\cs28\v\cf2 ICollection_Find(Filter)>main}{
\par }{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 ICollection_Find(FilterFunc)>main}{
\par }{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 ICollection_FindAll(Filter)>main}{
\par }{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 ICollection_FindAll(FilterFunc)>main}{
\par }{\cs26\uldb GetAsArray}{\cs28\v\cf2 ICollection_GetAsArray>main}{
\par }{\cs26\uldb GetCapacity}{\cs28\v\cf2 ICollection_GetCapacity>main}{
\par }{\cs26\uldb GetComparator}{\cs28\v\cf2 ICollection_GetComparator>main}{
\par }{\cs26\uldb GetFixedSize}{\cs28\v\cf2 ICollection_GetFixedSize>main}{
\par }{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 ICollection_GetIgnoreErrors>main}{
\par }{\cs26\uldb GetInstance}{\cs28\v\cf2 ICollection_GetInstance>main}{
\par }{\cs26\uldb GetIterator}{\cs28\v\cf2 ICollection_GetIterator>main}{
\par }{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 ICollection_GetIterator(Filter)>main}{
\par }{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 ICollection_GetIterator(FilterFunc)>main}{
\par }{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 ICollection_GetNaturalItemIID>main}{
\par }{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 ICollection_GetNaturalItemsOnly>main}{
\par }{\cs26\uldb GetSize}{\cs28\v\cf2 ICollection_GetSize>main}{
\par }{\cs26\uldb GetType}{\cs28\v\cf2 ICollection_GetType>main}{
\par }{\cs26\uldb IsEmpty}{\cs28\v\cf2 ICollection_IsEmpty>main}{
\par }{\cs26\uldb ItemAllowed}{\cs28\v\cf2 ICollection_ItemAllowed>main}{
\par }{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2 ICollection_ItemCount(Array)>main}{
\par }{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2 ICollection_ItemCount(ICollection)>main}{
\par }{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2 ICollection_ItemCount(Item)>main}{
\par }{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 ICollection_IsNaturalItem>main}{
\par }{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 ICollection_Matching(ICollection)>main}{
\par }{\cs26\uldb Matching(Array)}{\cs28\v\cf2 ICollection_Matching(Array)>main}{
\par }{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 ICollection_Remove(ICollection)>main}{
\par }{\cs26\uldb Remove(Item)}{\cs28\v\cf2 ICollection_Remove(Item)>main}{
\par }{\cs26\uldb Remove(Array)}{\cs28\v\cf2 ICollection_Remove(Array)>main}{
\par }{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 ICollection_RemoveAll(ICollection)>main}{
\par }{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 ICollection_RemoveAll(Item)>main}{
\par }{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 ICollection_RemoveAll(Array)>main}{
\par }{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 ICollection_Retain(ICollection)>main}{
\par }{\cs26\uldb Retain(Array)}{\cs28\v\cf2 ICollection_Retain(Array)>main}{
\par }{\cs26\uldb SetCapacity}{\cs28\v\cf2 ICollection_SetCapacity>main}{
\par }{\cs26\uldb SetComparator}{\cs28\v\cf2 ICollection_SetComparator>main}{
\par }{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 ICollection_SetIgnoreErrors>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from IUnknown
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {QueryInterface
\par AddRef
\par Release
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Methods_Alpha}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Methods}}}{IList methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 IList_Methods_ByObj}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 IList_Add(ICollection)>main}{
\par }{\cs26\uldb Add(Item)}{\cs28\v\cf2 IList_Add(Item)>main}{
\par }{\cs26\uldb Add(Array)}{\cs28\v\cf2 IList_Add(Array)>main}{
\par AddRef
\par }{\cs26\uldb Clear}{\cs28\v\cf2 ICollection_Clear>main}{
\par }{\cs26\uldb Clone}{\cs28\v\cf2 ICollection_Clone>main}{
\par }{\cs26\uldb CloneAsList}{\cs28\v\cf2 IList_CloneAsList>main}{
\par }{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 ICollection_Contains(ICollection)>main}{
\par }{\cs26\uldb Contains(Item)}{\cs28\v\cf2 ICollection_Contains(Item)>main}{
\par }{\cs26\uldb Contains(Array)}{\cs28\v\cf2 ICollection_Contains(Array)>main}{
\par }{\cs26\uldb Delete}{\cs28\v\cf2 IList_Delete>main}{
\par }{\cs26\uldb Equals}{\cs28\v\cf2 ICollection_Equals>main}{
\par }{\cs26\uldb Exchange}{\cs28\v\cf2 IList_Exchange>main}{
\par }{\cs26\uldb Find(Filter)}{\cs28\v\cf2 ICollection_Find(Filter)>main}{
\par }{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 ICollection_Find(FilterFunc)>main}{
\par }{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 ICollection_FindAll(Filter)>main}{
\par }{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 ICollection_FindAll(FilterFunc)>main}{
\par }{\cs26\uldb First}{\cs28\v\cf2 IList_First>main}{
\par }{\cs26\uldb GetAsArray}{\cs28\v\cf2 ICollection_GetAsArray>main}{
\par }{\cs26\uldb GetCapacity}{\cs28\v\cf2 ICollection_GetCapacity>main}{
\par }{\cs26\uldb GetComparator}{\cs28\v\cf2 ICollection_GetComparator>main}{
\par }{\cs26\uldb GetDuplicates}{\cs28\v\cf2 IList_GetDuplicates>main}{
\par }{\cs26\uldb GetFixedSize}{\cs28\v\cf2 ICollection_GetFixedSize>main}{
\par }{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 ICollection_GetIgnoreErrors>main}{
\par }{\cs26\uldb GetInstance}{\cs28\v\cf2 ICollection_GetInstance>main}{
\par }{\cs26\uldb GetItem}{\cs28\v\cf2 IList_GetItem>main}{
\par }{\cs26\uldb GetIterator}{\cs28\v\cf2 ICollection_GetIterator>main}{
\par }{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 ICollection_GetIterator(Filter)>main}{
\par }{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 ICollection_GetIterator(FilterFunc)>main}{
\par }{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 ICollection_GetNaturalItemIID>main}{
\par }{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 ICollection_GetNaturalItemsOnly>main}{
\par }{\cs26\uldb GetSize}{\cs28\v\cf2 ICollection_GetSize>main}{
\par }{\cs26\uldb GetSorted}{\cs28\v\cf2 IList_GetSorted>main}{
\par }{\cs26\uldb GetType}{\cs28\v\cf2 ICollection_GetType>main}{
\par }{\cs26\uldb IndexOf}{\cs28\v\cf2 IList_IndexOf>main}{
\par }{\cs26\uldb Insert(ICollection)}{\cs28\v\cf2 IList_Insert(ICollection)>main}{
\par }{\cs26\uldb Insert(Item)}{\cs28\v\cf2 IList_Insert(Item)>main}{
\par }{\cs26\uldb Insert(Array)}{\cs28\v\cf2 IList_Insert(Array)>main}{
\par }{\cs26\uldb IsEmpty}{\cs28\v\cf2 ICollection_IsEmpty>main}{
\par }{\cs26\uldb ItemAllowed}{\cs28\v\cf2 ICollection_ItemAllowed>main}{
\par }{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2 ICollection_ItemCount(Array)>main}{
\par }{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2 ICollection_ItemCount(ICollection)>main}{
\par }{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2 ICollection_ItemCount(Item)>main}{
\par }{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 ICollection_IsNaturalItem>main}{
\par }{\cs26\uldb Last}{\cs28\v\cf2 IList_Last>main}{
\par }{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 ICollection_Matching(ICollection)>main}{
\par }{\cs26\uldb Matching(Array)}{\cs28\v\cf2 ICollection_Matching(Array)>main}{
\par QueryInterface
\par Release
\par }{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 ICollection_Remove(ICollection)>main}{
\par }{\cs26\uldb Remove(Item)}{\cs28\v\cf2 ICollection_Remove(Item)>main}{
\par }{\cs26\uldb Remove(Array)}{\cs28\v\cf2 ICollection_Remove(Array)>main}{
\par }{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 ICollection_RemoveAll(ICollection)>main}{
\par }{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 ICollection_RemoveAll(Item)>main}{
\par }{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 ICollection_RemoveAll(Array)>main}{
\par }{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 ICollection_Retain(ICollection)>main}{
\par }{\cs26\uldb Retain(Array)}{\cs28\v\cf2 ICollection_Retain(Array)>main}{
\par }{\cs26\uldb SetCapacity}{\cs28\v\cf2 ICollection_SetCapacity>main}{
\par }{\cs26\uldb SetComparator}{\cs28\v\cf2 ICollection_SetComparator>main}{
\par }{\cs26\uldb SetDuplicates}{\cs28\v\cf2 IList_SetDuplicates>main}{
\par }{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 ICollection_SetIgnoreErrors>main}{
\par }{\cs26\uldb SetItem}{\cs28\v\cf2 IList_SetItem>main}{
\par }{\cs26\uldb SetSorted}{\cs28\v\cf2 IList_SetSorted>main}{
\par }{\cs26\uldb Sort(Comparator)}{\cs28\v\cf2 IList_Sort(Comparator)>main}{
\par }{\cs26\uldb Sort(CompareFunc)}{\cs28\v\cf2 IList_Sort(CompareFunc)>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Add(Item)}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Add(Item)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Add;Add(Item)}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Add}}}{IList.Add(Item)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds item to collection, if allowed.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Add(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds item to collection in position required by sort order if list is sorted, otherwise appends to end of list.  Fails if:-
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is already in collection and duplicates are not allowed.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Collection is of fixed size.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is non-natural and collection is natural.
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par Returns true if successful.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Add(ICollection)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Add(ICollection)}}K{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Add;Add(ICollection)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }
\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Add}}}{IList.Add(ICollection)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Adds all allowed, supplied items to collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Add(}{\cs29\b\f2 const}{\cs22\f2  Collection: }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{
\cs22\f2 ): Integer;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Adds items to collection in position required by sort order if list is sorted, otherwise appends to end of list.  See }{\cs26\uldb 
Add(Item)}{\cs28\v\cf2 IList_Add(Item)}{ for reasons why items can be rejected.
\par 
\par Returns number of items successfully added.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Add(Array)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Add(Array)}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Add;Add(Array)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Add}}}{IList.Add(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Adds all allowed, supplied items to collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Add(}{\cs29\b\f2 const}{\cs22\f2  ItemArray: }{\cs29\b\f2 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{
\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Integer;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Adds items to collection in position required by sort order if list is sorted, otherwise appends to end of list.  See }{\cs26\uldb 
Add(Item)}{\cs28\v\cf2 IList_Add(Item)}{ for reasons why items can be rejected.
\par 
\par Returns number of items successfully added.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_CloneAsList}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList CloneAsList}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ CloneAsList}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_CloneAsList}}}{IList.CloneAsList
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Creates duplicate of list.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  CloneAsList: }{\cs31\f2\uldb IList}{\cs30\v\f2\cf2 IList}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns a shallow copy of collection containing current items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Delete}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Delete}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Delete}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Delete}}}{IList.Delete
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Deletes item at index.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Delete(Index: Integer): }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Deletes item 
at numbered index, moving items with higher indices down by 1.  Returns item that was removed.  First item is at index 0.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{ if list is fixed size or index is out of range..
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Exchange}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Exchange}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Exchange}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Exchange}}}{IList.Exchange
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Exchanges items.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  Exchange(Index1, Index2: Integer);
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Exchanges items at indices.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_First}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList First}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ First}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_First}}}{IList.First
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns first item of list.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  First: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns item at index 0 or nil if list is empty.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_GetDuplicates}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList GetDuplicates}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetDuplicates}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_GetDuplicates}}}{IList.GetDuplicates
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Whether duplicates are allowed.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetDuplicates: Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {If true, an item cannot be added or inserted if it is equal to an existing item, according to collection comparator.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_GetItem}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList GetItem}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetItem}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_GetItem}}}{IList.GetItem
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Retrieves item at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetItem(Index: Integer): }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Retrieves item at index, or nil if position is out of range (and ignore errors is set). Can throw }{\cs26\uldb ECollectionError}{
\cs28\v\cf2 ECollectionError}{ if index is out of range.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_GetSorted}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList GetSorted}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetSorted}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_GetSorted}}}{IList.GetSorted
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Whether list is sorted.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetSorted: Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns true if list is flagged as always sorted.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_IndexOf}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList IndexOf}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ IndexOf}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_IndexOf}}}{IList.IndexOf
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns position of item.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  IndexOf(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{
\cs22\f2 ): Integer;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns index of first instance of item or \endash 1 if not found
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Insert(Item)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Insert(Item)}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Insert;Insert(Item)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Insert}}}{IList.Insert(Item)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Inserts item at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Insert(Index: Integer; }{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 
ICollectable}{\cs22\f2 ): Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Places item at index, moving items at that position and higher up by 1.  Unlike }{\cs26\uldb Add(Item)}{\cs28\v\cf2 IList_Add(Item)}{
, this breaks sort order and the list is no longer flagged as sorted.  Fails if:-
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is already in collection and duplicates are not allowed.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Co
llection is of fixed size.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is non-natural and collection is natural.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Index is out of range.

\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par Returns true if successful.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Insert(ICollection)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Insert(ICollection)}}K{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Insert;Insert(ICollection)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec 
}\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Insert(ICollection)}}}{IList.Insert(ICollection)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Inserts collection at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Insert(Index: Integer; }{\cs29\b\f2 const}{\cs22\f2  Collection }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 
ICollection}{\cs22\f2 ): Integer;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Places all items at index, moving items at that position and higher up by 1. Unlike }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 
ICollection_Add(ICollection)}{, this breaks sort order and the list is no longer flagged as sorted.  See }{\cs26\uldb Insert(Item)}{\cs28\v\cf2 IList_Insert(Item)}{ for reasons this can fail.
\par 
\par Returns number of items successfully inserted.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Insert(Array)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Insert(Array)}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Insert;Insert(Array)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Insert}}}{IList.Insert(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Inserts array at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Insert(Index: Integer; }{\cs29\b\f2 const}{\cs22\f2  ItemArray }{\cs29\b\f2 array of}{\cs22\f2  }{
\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Integer;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Places all items at index, moving items at that position and higher up by 1. Unlike }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 
ICollection_Add(ICollection)}{, this breaks sort order and the list is no longer flagged as sorted.  See }{\cs26\uldb Insert(Item)}{\cs28\v\cf2 IList_Insert(Item)}{ for reasons this can fail.
\par 
\par Returns number of items successfully inserted.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Last}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Last}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Last}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Last}}}{IList.Last
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns last item in list.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Last: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Returns item at last index or nil if list is empty.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_SetDuplicates}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList SetDuplicates}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ SetDuplicates}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_SetDuplicates}}}{IList.SetDuplicates
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Sets whether duplicates are permitted.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  SetDuplicates(Value: Boolean);
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
If set to false, items cannot be added or inserted if they are equal to any existing item, according to the collection comparator.  Setting to false can fail if there already duplicates in list.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_SetItem}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList SetItem}}K{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ SetItem}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_SetItem}}}{IList.SetItem
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Replaces existing item at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  SetItem(Index: Integer; }{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 
ICollectable}{\cs22\f2 );
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \f1\fs20\lang2057\cgrid {Places item at index, replacing existing item there. .  Fails if:-
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is already in collection and duplicates are not allowed.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Item is non-natural and collection is natural.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Index is out of range.

\par }\pard \nowidctlpar\widctlpar\adjustright {
\par Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_SetSorted}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList SetSorted}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ SetSorted}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_SetSorted}}}{IList.SetSorted
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sets whether list is sorted.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  SetSorted(Value: Boolean);
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sets whether list must always be sorted.  If set to true, list is sorted according to collection comparator.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Sort(Comparator)}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Sort(Comparator)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Sort;Sort(Comparator)}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Sort}}}{IList.Sort(Comparator)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sorts list using comparator object.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  Sort(}{\cs29\b\f2 const}{\cs22\f2  Comparator: }{\cs31\f2\uldb IComparator}{\cs30\v\f2\cf2 IComparator}{\cs22\f2 );
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sorts list in ascending order according to comparator.  Note that this resets the list sort status to false as it was not sorted using the collection comparator.  Use }{
\cs31\f2\uldb SetSorted}{\cs28\v\cf2 IList_SetSorted}{ to set sort status.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ IList_Sort(CompareFunc)}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ IList Sort(CompareFunc)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Sort;Sort(CompareFunc)}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ IList_Sort}}}{IList.Sort(CompareFunc)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb IList}{\cs24\v\fs16\cf2 IList}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sorts list using compare function.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  Sort(CompareFunc: }{\cs31\f2\uldb TCollectionCompareFunc}{\cs30\v\f2\cf2 TCollectionCompareFunc}{\cs22\f2 );
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Sorts list in ascending order according to compare function.  Note that this resets the list sort status to false as it was not sorted using the collection comparator.  Use }{
\cs31\f2\uldb SetSorted}{\cs28\v\cf2 IList_SetSorted}{ to set sort status.
\par 
\par }}
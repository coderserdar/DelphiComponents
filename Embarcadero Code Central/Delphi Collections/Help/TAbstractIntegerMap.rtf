{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times{\*\falt Times New Roman};}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica{\*\falt Arial};}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}
{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva{\*\falt Arial};}{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn{\*\falt Times New Roman};}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv{\*\falt Arial};}
{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York{\*\falt Times New Roman};}
{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f16\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f17\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f18\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 10 Pitch;}
{\f19\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 20 Pitch;}{\f20\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 5 Pitch;}{\f21\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 12 Pitch;}
{\f22\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 24 Pitch;}{\f23\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic 6 Pitch;}{\f24\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 16.67 Pitch;}
{\f25\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times{\*\falt Times New Roman};}{\f26\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f27\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f29\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f30\fswiss\fcharset0\fprq2{\*\panose 020b0602030504090204}Lucida Sans;}
{\f31\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f32\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f33\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f34\fmodern\fcharset0\fprq1{\*\panose 02010509020102010303}OCR A Extended;}{\f35\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}
{\f37\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f38\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f39\fdecor\fcharset0\fprq2{\*\panose 04040403030d02020704}Matisse ITC;}
{\f40\fdecor\fcharset0\fprq2{\*\panose 04020404030d07020202}Tempus Sans ITC;}{\f41\fdecor\fcharset0\fprq2{\*\panose 04040506030f02020702}Westminster;}{\f42\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}
{\f43\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f44\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Int A;}{\f45\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Int B;}
{\f46\fmodern\fcharset2\fprq1{\*\panose 00000000000000000000}LotusWP Box;}{\f47\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Type;}{\f48\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LotusWP Icon;}
{\f49\froman\fcharset2\fprq2{\*\panose 00000000000000000000}Math A;}{\f50\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Math B;}{\f51\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Math C;}
{\f52\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode;}{\f53\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f54\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Baskerville;}
{\f55\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Binner Gothic;}{\f56\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Centaur;}{\f57\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}
{\f58\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans;}{\f59\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans Condensed;}{\f60\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Gill Sans Ultra Bold;}
{\f61\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}{\f62\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}News Gothic;}{\f63\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Nimrod;}
{\f64\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Onyx;}{\f65\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Botanical;}{\f66\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell;}
{\f67\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell Condensed;}{\f68\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Rockwell Light;}{\f69\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Brush Script;}
{\f70\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Perpetua;}{\f71\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Lydian;}{\f72\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}News Gothic Condensed;}
{\f73\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Photina Casual Black;}{\f74\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Abadi MT Condensed Extra Bold;}
{\f75\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Microstyle Bold Extended ATT;}{\f76\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Arial Rounded MT Bold;}{\f77\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Verdana Ref;}
{\f78\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}MagicSymbols;}{\f79\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Gamekeys MT;}{\f80\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Microsoft Logo 95;}
{\f81\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}SWlogo;}{\f82\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Condensed;}{\f83\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol;}
{\f84\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f85\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f86\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Trebuchet MS;}
{\f87\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f88\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Agency FB;}{\f89\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}
{\f90\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f91\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}{\f92\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Miriam Fixed;}
{\f93\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Fixed Miriam Transparent;}{\f94\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}{\f95\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Rod;}
{\f96\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 1;}{\f97\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 2;}
{\f98\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Microstyle Bold Extended ATT Tu{\*\falt Times New Roman};}{\f99\froman\fcharset0\fprq0{\*\panose 00000000000000000000}(normal text);}
{\f100\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}News Gothic MT CE;}{\f101\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}News Gothic MT Greek;}{\f102\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}News Gothic MT Tur;}
{\f103\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}News Gothic MT Baltic;}{\f104\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Handwriting CE;}
{\f105\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Greek;}{\f106\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Tur;}
{\f107\fscript\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Handwriting Baltic;}{\f108\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Sans CE;}{\f109\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Sans Greek;}
{\f110\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Sans Tur;}{\f111\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Sans Baltic;}{\f112\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Int A CE;}
{\f113\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Int A Greek;}{\f114\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Int A Tur;}{\f115\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Int A Baltic;}
{\f116\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Int B CE;}{\f117\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Int B Greek;}{\f118\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Int B Tur;}
{\f119\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Int B Baltic;}{\f120\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Type CE;}{\f121\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Type Greek;}
{\f122\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Type Tur;}{\f123\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Type Baltic;}{\f124\froman\fcharset238\fprq2{\*\panose 00000000000000000000}LotusWP Icon CE;}
{\f125\froman\fcharset161\fprq2{\*\panose 00000000000000000000}LotusWP Icon Greek;}{\f126\froman\fcharset162\fprq2{\*\panose 00000000000000000000}LotusWP Icon Tur;}{\f127\froman\fcharset186\fprq2{\*\panose 00000000000000000000}LotusWP Icon Baltic;}
{\f128\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode CE;}{\f129\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Greek;}
{\f130\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Tur;}{\f131\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}Lotus Postal Barcode Baltic;}{\f132\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell CE;}
{\f133\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Greek;}{\f134\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Baltic;}{\f135\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell Condensed CE;}
{\f136\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Greek;}{\f137\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Baltic;}
{\f138\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell Light CE;}{\f139\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Rockwell Light Greek;}{\f140\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Light Tur;}
{\f141\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Rockwell Light Baltic;}{\f142\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}MagicSymbols CE;}{\f143\fnil\fcharset204\fprq2{\*\panose 00000000000000000000}MagicSymbols Cyr;}
{\f144\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}MagicSymbols Greek;}{\f145\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}MagicSymbols Tur;}{\f146\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}MagicSymbols Baltic;}
{\f147\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}SWlogo CE;}{\f148\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}SWlogo Greek;}{\f149\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}SWlogo Tur;}
{\f150\fnil\fcharset186\fprq2{\*\panose 00000000000000000000}SWlogo Baltic;}{\f151\fnil\fcharset238\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol CE;}{\f152\fnil\fcharset162\fprq2{\*\panose 00000000000000000000}Attica IAGB3 Symbol Tur;}
{\f153\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Univers CE;}{\f154\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Univers Tur;}{\f155\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Tur;}
{\f156\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Rockwell Condensed Tur;}{\f157\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Verdana Ref CE;}{\f158\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Verdana Ref Cyr;}
{\f159\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Verdana Ref Greek;}{\f160\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Verdana Ref Tur;}{\f161\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Verdana Ref Baltic;}
{\f162\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Univers Condensed CE;}{\f163\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Univers Condensed Tur;}{\f164\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Trebuchet MS CE;}
{\f165\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Trebuchet MS Tur;}{\f166\froman\fcharset238\fprq2 Times New Roman CE;}{\f167\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f169\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f170\froman\fcharset162\fprq2 Times New Roman Tur;}{\f171\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f172\fswiss\fcharset238\fprq2 Arial CE;}{\f173\fswiss\fcharset204\fprq2 Arial Cyr;}{\f175\fswiss\fcharset161\fprq2 Arial Greek;}
{\f176\fswiss\fcharset162\fprq2 Arial Tur;}{\f177\fswiss\fcharset186\fprq2 Arial Baltic;}{\f178\fmodern\fcharset238\fprq1 Courier New CE;}{\f179\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f181\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f182\fmodern\fcharset162\fprq1 Courier New Tur;}{\f183\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f256\fswiss\fcharset238\fprq2 Tahoma CE;}{\f257\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f259\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f260\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f261\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f268\fswiss\fcharset238\fprq2 Arial Black CE;}{\f269\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f271\fswiss\fcharset161\fprq2 Arial Black Greek;}
{\f272\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f273\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f352\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f353\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}
{\f355\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f356\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f358\froman\fcharset238\fprq2 Book Antiqua CE;}{\f359\froman\fcharset204\fprq2 Book Antiqua Cyr;}
{\f361\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f362\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f363\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f364\fswiss\fcharset238\fprq2 Century Gothic CE;}
{\f365\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f367\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f368\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f369\fswiss\fcharset186\fprq2 Century Gothic Baltic;}
{\f418\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f419\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f421\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f422\fmodern\fcharset162\fprq1 Lucida Console Tur;}
{\f484\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f485\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f487\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f488\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f489\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f508\froman\fcharset238\fprq2 Garamond CE;}{\f509\froman\fcharset204\fprq2 Garamond Cyr;}{\f511\froman\fcharset161\fprq2 Garamond Greek;}{\f512\froman\fcharset162\fprq2 Garamond Tur;}{\f513\froman\fcharset186\fprq2 Garamond Baltic;}
{\f670\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f671\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f673\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f674\fscript\fcharset162\fprq2 Comic Sans MS Tur;}
{\f675\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f676\fswiss\fcharset238\fprq2 Impact CE;}{\f677\fswiss\fcharset204\fprq2 Impact Cyr;}{\f679\fswiss\fcharset161\fprq2 Impact Greek;}{\f680\fswiss\fcharset162\fprq2 Impact Tur;}
{\f681\fswiss\fcharset186\fprq2 Impact Baltic;}{\f688\fswiss\fcharset238\fprq2 Verdana CE;}{\f689\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f691\fswiss\fcharset161\fprq2 Verdana Greek;}{\f692\fswiss\fcharset162\fprq2 Verdana Tur;}
{\f693\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid 
\snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 
footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive \f1\fs16\uldb \sbasedon10 SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid 
\sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar
\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 \additive \f1\fs16\ul \sbasedon17 SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 
SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 WindowLink Display;}{\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 
NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 \additive \v\f2\fs20\cf2 \sbasedon10 Code WindowLink Data;}{\*\cs31 \additive \f2\fs20\uldb \sbasedon10 
Code WindowLink Display;}}{\*\listtable{\list\listtemplateid134807553\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid148331751}}{\*\listoverridetable{\listoverride\listid148331751\listoverridecount0\ls1}}{\*\revtbl {Unknown;}}{\info{\title Classname}{\author Matthew Greet}{\operator Matthew Greet}{\creatim\yr2003\mo1\dy26\hr15\min36}{\revtim\yr2004\mo5\dy31\hr12\min22}
{\version381}{\edmins346}{\nofpages42}{\nofwords4499}{\nofchars25647}{\*\company  }{\nofcharsws0}{\vern71}}\paperw28350\paperh28350\margl0\margr0\margt0\margb0 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0
{\*\template D:\\Projects\\WinHelp Templates\\Working\\Delphi Interfaced Class.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{
 TAbstractIntegerMap Class}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TAbstractIntegerMap;Map}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\cs19\super A}{ TAbstractIntegerMap}}}{TAbstractIntegerMap}{\cs24 
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs23\fs16\ul Hierarchy}{\cs25\v\fs16\ul\cf2 TAbstractIntegerMap_Hierarchy}{        }{\cs17\fs16\uldb Properties}{\cs24\v\fs16\cf2 
TAbstractIntegerMap_Properties_ByObj>Inspect}{        }{\cs17\fs16\uldb Methods}{\cs24\v\fs16\cf2 TAbstractIntegerMap_Methods_ByObj >Inspect}{\cs17\fs16\uldb 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Template pattern for integer maps.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Unit
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Collections
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Abstract, base class and template for integer maps.
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Hierarchy}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Hierarchy}}}{Hierarchy
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb 
\par TObject
\par }{
\par }{\cs26\uldb TInterfacedObject
\par }{
\par }{\cs26\uldb TAbstractCollection}{\cs28\v\cf2 TAbstractCollection>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Interfaces
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }{\cs26\uldb ICollection}{\cs28\v\cf2 ICollection>main}{
\par 
\par }{\cs26\uldb IIntegerMap}{\cs28\v\cf2 IIntegerMap>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Properties_ByObj}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Properties}}}{TAbstractIntegerMap properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 
TAbstractIntegerMap_Properties_Alpha}{        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In TAbstractIntegerMap
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Items}{\cs28\v\cf2 TAbstractIntegerMap_Items>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TAbstractCollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 TAbstractCollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 TAbstractCollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 TAbstractCollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 TAbstractCollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 TAbstractCollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 TAbstractCollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 TAbstractCollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 TAbstractCollection_Size>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TInterfacedObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}RefCount
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Properties_Alpha}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Properties}}}{TAbstractIntegerMap properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 TAbstractIntegerMap_Properties_ByObj}{
        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 TAbstractCollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 TAbstractCollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 TAbstractCollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 TAbstractCollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 TAbstractCollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Items}{\cs28\v\cf2 TAbstractIntegerMap_Items>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 TAbstractCollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 TAbstractCollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}RefCount
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 TAbstractCollection_Size>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Items}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Items}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Items}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Items}}}{TAbstractIntegerMap.Items
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Items via key.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 property}{\cs22\f2  Items[Key: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ]: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ;

\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Item at key position.  Return value is nil if item no is associated with key.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Methods_ByObj}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Methods}}}{TAbstractIntegerMap methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 TAbstractIntegerMap_Methods_Alpha
}{        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In TAbstractIntegerMap
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clone}{\cs28\v\cf2 TAbstractIntegerMap_Clone>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CloneAsIntegerMap}{\cs28\v\cf2 TAbstractIntegerMap_CloneAsIntegerMap>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ContainsKey(Key)}{\cs28\v\cf2 TAbstractIntegerMap_ContainsKey(Key)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ContainsKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_ContainsKey(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(Array)}{\cs28\v\cf2 TAbstractIntegerMap_Create(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(Array, NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(Array, NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(KeyArray, ItemArray)}{\cs28\v\cf2 TAbstractIntegerMap_Create(KeyArray, ItemArray)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(KeyArray, ItemArray, NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(KeyArray, ItemArray, NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(IIntegerMap)}{\cs28\v\cf2 TAbstractIntegerMap_Create(IIntegerMap)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Get}{\cs28\v\cf2 TAbstractIntegerMap_Get>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAssociationIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetAssociationIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetIterator>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetKeyPosition}{\cs28\v\cf2 TAbstractIntegerMap_GetKeyPosition>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetKeys}{\cs28\v\cf2 TAbstractIntegerMap_GetKeys>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetMapIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetMapIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 TAbstractIntegerMap_GetNaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetType}{\cs28\v\cf2 TAbstractIntegerMap_GetType>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetValues}{\cs28\v\cf2 TAbstractIntegerMap_GetValues>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(ICollection)}{\cs28\v\cf2 TAbstractIntegerMap_Put(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(IIntegerMap)}{\cs28\v\cf2 TAbstractIntegerMap_Put(IIntegerMap)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Item)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Key, Item)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Key, Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Array)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveKey(Key)}{\cs28\v\cf2 TAbstractIntegerMap_RemoveKey(Key)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_RemoveKey(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RetainKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_RetainKey(Array)>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueAdd}{\cs28\v\cf2 TAbstractIntegerMap_TrueAdd>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueContains}{\cs28\v\cf2 TAbstractIntegerMap_TrueContains>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueGet}{\cs28\v\cf2 TAbstractIntegerMap_TrueGet>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TruePut}{\cs28\v\cf2 TAbstractIntegerMap_TruePut>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueRemove}{\cs28\v\cf2 TAbstractIntegerMap_TrueRemove>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueRemove2}{\cs28\v\cf2 TAbstractIntegerMap_TrueRemove2>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TAbstractCollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Item)}{\cs28\v\cf2 TAbstractCollection_Add(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollection_Add(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Array)}{\cs28\v\cf2 TAbstractCollection_Add(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb AfterConstruction}{\cs28\v\cf2 TAbstractCollection_AfterConstruction>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb BeforeDestruction}{\cs28\v\cf2 TAbstractCollection_BeforeDestruction>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clear}{\cs28\v\cf2 TAbstractCollection_Clear>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CollectionError}{\cs28\v\cf2 TAbstractCollection_CollectionError>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Item)}{\cs28\v\cf2 TAbstractCollection_Contains(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 TAbstractCollection_Contains(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Array)}{\cs28\v\cf2 TAbstractCollection_Contains(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create}{\cs28\v\cf2 TAbstractCollection_Create>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(ICollection)}{\cs28\v\cf2 TAbstractCollection_Create(ICollection)>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(NaturalItemsOnly)}{\cs28\v\cf2 TAbstractCollection_Create(NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractCollection_Equals>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(Filter)}{\cs28\v\cf2 TAbstractCollection_Find(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_Find(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 TAbstractCollection_FindAll(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_FindAll(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAsArray}{\cs28\v\cf2 TAbstractCollection_GetAsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetCapacity}{\cs28\v\cf2 TAbstractCollection_GetCapacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetComparator}{\cs28\v\cf2 TAbstractCollection_GetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDuplicates}{\cs28\v\cf2 TAbstractCollection_GetDuplicates>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetFixedSize}{\cs28\v\cf2 TAbstractCollection_GetFixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 TAbstractCollection_GetIgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractCollection_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollection_GetIterator(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_GetIterator(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 TAbstractCollection_GetNaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetSize}{\cs28\v\cf2 TAbstractCollection_GetSize>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb InitFrom(ICollection)}{\cs28\v\cf2 TAbstractCollection_InitFrom(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsEmpty}{\cs28\v\cf2 TAbstractCollection_IsEmpty>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemAllowed}{\cs28\v\cf2 TAbstractCollection_ItemAllowed>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2  TAbstractCollection_ItemCount(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2  TAbstractCollection_ItemCount(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2  TAbstractCollection_ItemCount(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 TAbstractCollection_IsNaturalItem>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb MakeCapacity}{\cs28\v\cf2 TAbstractCollection_MakeCapacity>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 TAbstractCollection_Matching(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(Array)}{\cs28\v\cf2 TAbstractCollection_Matching(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 TAbstractCollection_Remove(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Item)}{\cs28\v\cf2 TAbstractCollection_Remove(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Array)}{\cs28\v\cf2 TAbstractCollection_Remove(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 TAbstractCollection_Retain(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(Array)}{\cs28\v\cf2 TAbstractCollection_Retain(Array)>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetCapacity}{\cs28\v\cf2 TAbstractCollection_SetCapacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetComparator}{\cs28\v\cf2 TAbstractCollection_SetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 TAbstractCollection_SetIgnoreErrors>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueAdd}{\cs28\v\cf2 TAbstractCollection_TrueAdd>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueClear}{\cs28\v\cf2 TAbstractCollection_TrueClear>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueItemCount}{\cs28\v\cf2 TAbstractCollection_TrueItemCount>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueRemove}{\cs28\v\cf2 TAbstractCollection_TrueRemove>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TInterfacedObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}_AddRef
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}AfterConstruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Create
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Methods_Alpha}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Methods}}}{TAbstractIntegerMap methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 TAbstractIntegerMap_Methods_ByObj}{
        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Item)}{\cs28\v\cf2 TAbstractCollection_Add(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollection_Add(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Array)}{\cs28\v\cf2 TAbstractCollection_Add(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb AfterConstruction}{\cs28\v\cf2 TAbstractCollection_AfterConstruction>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb BeforeDestruction}{\cs28\v\cf2 TAbstractCollection_BeforeDestruction>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clear}{\cs28\v\cf2 TAbstractCollection_Clear>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clone}{\cs28\v\cf2 TAbstractIntegerMap_Clone>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CloneAsIntegerMap}{\cs28\v\cf2 TAbstractIntegerMap_CloneAsIntegerMap>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CollectionError}{\cs28\v\cf2 TAbstractCollection_CollectionError>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 TAbstractCollection_Contains(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Item)}{\cs28\v\cf2 TAbstractCollection_Contains(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Array)}{\cs28\v\cf2 TAbstractCollection_Contains(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ContainsKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_ContainsKey(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ContainsKey(Key)}{\cs28\v\cf2 TAbstractIntegerMap_ContainsKey(Key)>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create}{\cs28\v\cf2 TAbstractCollection_Create>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(Array)}{\cs28\v\cf2 TAbstractIntegerMap_Create(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(Array, NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(Array, NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(KeyArray, ItemArray)}{\cs28\v\cf2 TAbstractIntegerMap_Create(KeyArray, ItemArray)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(KeyArray, ItemArray, NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(KeyArray, ItemArray, NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(ICollection)}{\cs28\v\cf2 TAbstractCollection_Create(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(IIntegerMap)}{\cs28\v\cf2 TAbstractIntegerMap_Create(IIntegerMap)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(NaturalItemsOnly)}{\cs28\v\cf2 TAbstractIntegerMap_Create(NaturalItemsOnly)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractCollection_Equals>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(Filter)}{\cs28\v\cf2 TAbstractCollection_Find(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_Find(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 TAbstractCollection_FindAll(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_FindAll(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Get}{\cs28\v\cf2 TAbstractIntegerMap_Get>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAsArray}{\cs28\v\cf2 TAbstractCollection_GetAsArray>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAssociationIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetAssociationIterator>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetCapacity}{\cs28\v\cf2 TAbstractCollection_GetCapacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetComparator}{\cs28\v\cf2 TAbstractCollection_GetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDuplicates}{\cs28\v\cf2 TAbstractCollection_GetDuplicates>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetFixedSize}{\cs28\v\cf2 TAbstractCollection_GetFixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 TAbstractCollection_GetIgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractCollection_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollection_GetIterator(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 TAbstractCollection_GetIterator(FilterFunc)>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetKeyPosition}{\cs28\v\cf2 TAbstractIntegerMap_GetKeyPosition>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetKeys}{\cs28\v\cf2 TAbstractIntegerMap_GetKeys>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetMapIterator}{\cs28\v\cf2 TAbstractIntegerMap_GetMapIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 TAbstractIntegerMap_GetNaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 TAbstractCollection_GetNaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetSize}{\cs28\v\cf2 TAbstractCollection_GetSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetType}{\cs28\v\cf2 TAbstractIntegerMap_GetType>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetValues}{\cs28\v\cf2 TAbstractIntegerMap_GetValues>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb InitFrom(ICollection)}{\cs28\v\cf2 TAbstractCollection_InitFrom(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsEmpty}{\cs28\v\cf2 TAbstractCollection_IsEmpty>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemAllowed}{\cs28\v\cf2 TAbstractCollection_ItemAllowed>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2  TAbstractCollection_ItemCount(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2  TAbstractCollection_ItemCount(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2  TAbstractCollection_ItemCount(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 TAbstractCollection_IsNaturalItem>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb MakeCapacity}{\cs28\v\cf2 TAbstractCollection_MakeCapacity>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 TAbstractCollection_Matching(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(Array)}{\cs28\v\cf2 TAbstractCollection_Matching(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(ICollection)}{\cs28\v\cf2 TAbstractIntegerMap_Put(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(IIntegerMap)}{\cs28\v\cf2 TAbstractIntegerMap_Put(IIntegerMap)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Item)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Key, Item)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Key, Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Put(Array)}{\cs28\v\cf2 TAbstractIntegerMap_Put(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 TAbstractCollection_Remove(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Item)}{\cs28\v\cf2 TAbstractCollection_Remove(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Array)}{\cs28\v\cf2 TAbstractCollection_Remove(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 TAbstractCollection_RemoveAll(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveKey(Key)}{\cs28\v\cf2 TAbstractIntegerMap_RemoveKey(Key)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_RemoveKey(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 TAbstractCollection_Retain(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(Array)}{\cs28\v\cf2 TAbstractCollection_Retain(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RetainKey(Array)}{\cs28\v\cf2 TAbstractIntegerMap_RetainKey(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetCapacity}{\cs28\v\cf2 TAbstractCollection_SetCapacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetComparator}{\cs28\v\cf2 TAbstractCollection_SetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 TAbstractCollection_SetIgnoreErrors>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueAdd}{\cs28\v\cf2 TAbstractIntegerMap_TrueAdd>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueClear}{\cs28\v\cf2 TAbstractCollection_TrueClear>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueContains}{\cs28\v\cf2 TAbstractIntegerMap_TrueContains>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueGet}{\cs28\v\cf2 TAbstractIntegerMap_TrueGet>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueItemCount}{\cs28\v\cf2 TAbstractCollection_TrueItemCount>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TruePut}{\cs28\v\cf2 TAbstractIntegerMap_TruePut>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueRemove}{\cs28\v\cf2 TAbstractIntegerMap_TrueRemove>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb TrueRemove2}{\cs28\v\cf2 TAbstractIntegerMap_TrueRemove2>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Clone}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Clone}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Clone}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Clone}}}{TAbstractIntegerMap.Clone
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates duplicate of collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Clone: }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{\cs22\f2 ; }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns a shallow copy of collection containing current items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_CloneAsIntegerMap}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap CloneAsIntegerMap}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ CloneAsIntegerMap}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_CloneAsIntegerMap}}}{TAbstractIntegerMap.CloneAsIntegerMap
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates duplicate of collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  CloneAsIntegerMap: }{\cs31\f2\uldb IIntegerMap}{\cs30\v\f2\cf2 IIntegerMap}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns a shallow copy of collection containing current items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_ContainsKey(Key)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap ContainsKey(Key)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 ContainsKey;ContainsKey(Key)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_ContainsKey}}}{TAbstractIntegerMap.ContainsKey(Key)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Whether collection contains key.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  ContainsKey(}{\cs29\b\f2 const}{\cs22\f2  Key: Integer): Boolean; }{\cs29\b\f2 virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns true if collection contains any item associated with key.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_ContainsKey(Array)}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap ContainsKey(Array)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 ContainsKey;ContainsKey(Array)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_ContainsKey}}}{TAbstractIntegerMap.ContainsKey(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Whether all supplied keys are found in collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  ContainsKey(}{\cs29\b\f2 const}{\cs22\f2  ItemArray: }{\cs29\b\f2 array of}{\cs22\f2  Integer): Boolean; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns true if all supplied keys are found in collection.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Create(NaturalItemsOnly)}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(NaturalItemsOnly)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 Create;Create(NaturalItemsOnly)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(NaturalItemsOnly)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructor for natural maps.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(NaturalItemsOnly: Boolean);
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {If parameter is se
t, creates natural item integer map, otherwise non-natural item integer map.  Parameter is ignored for implementations that require natural items although no current map implementations require this.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Create(Array)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(Array)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Create;Create(Array)}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructs from array.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  ItemArray }{\cs29\b\f2 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 
); }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates natural item integer map from }{\i ItemArray}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Create(Array, NaturalItemsOnly)
}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(Array, NaturalItemsOnly)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\cs19\super K}{ Create;Create(Array, NaturalItemsOnly)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(Array, NaturalItemsOnly)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructs from array.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  ItemArray }{\cs29\b\f2 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 
; NaturalItemsOnly: Boolean); }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates natural item integer map from }{\i ItemArray}{.  }{\i NaturalItemsOnly}{ is ignored.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Create(KeyArray, ItemArray)}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(KeyArray, ItemArray)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 Create;Create(KeyArray, ItemArray)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(KeyArray, ItemArray)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructs from array of keys and items.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  KeyArray: }{\cs29\b\f2 array}{\cs22\f2  of Integer; }{\cs29\b\f2 const}{\cs22\f2  ItemArray }{\cs29\b\f2 
array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ); }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates non-natural item integer map from }{\i KeyArray}{ and }{\i ItemArray}{.  Excess elements beyond the shortest of the two arrays are ignored..
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{
 TAbstractIntegerMap_Create(KeyArray, ItemArray, NaturalItemsOnly)}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(KeyArray, ItemArray, NaturalItemsOnly)}}K{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Create;Create(KeyArray, ItemArray, NaturalItemsOnly)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{
 TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(KeyArray, ItemArray, NaturalItemsOnly)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructs from array of keys and items.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  KeyArray: }{\cs29\b\f2 array}{\cs22\f2  of Integer; }{\cs29\b\f2 const}{\cs22\f2  ItemArray}{\cs29\b\f2 
 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; NaturalItemsOnly: Boolean); }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates natural/non-natural item integer map from }{\i KeyArray}{ and }{\i ItemArray}{ according to }{\i NaturalItemsOnly}{
.  Excess elements beyond the shortest of the two arrays are ignored.  }{\i NaturalItemsOnly}{ is ignored for implementations that require natural items, although no current map implementations require this.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Create(IIntegerMap)}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Create(IIntegerMap)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 Create;Create(IIntegerMap)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Create}}}{TAbstractIntegerMap.Create(IIntegerMap)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructor using existing collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  Map: }{\cs31\f2\uldb IIntegerMap}{\cs30\v\f2\cf2 IIntegerMap}{\cs22\f2 ); }{\cs29\b\f2 virtual}{\cs22\f2 ;

\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates map using same key-value pairs as supplied map and copying attributes, such as natural items only, from parameter.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Get}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Get}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Get}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Get}}}{TAbstractIntegerMap.Get
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Retrieves item using key.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Get(const Key: Integer): }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns item associated with key or nil if no such item exists.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetAssociationIterator}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetAssociationIterator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 GetAssociationIterator}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetAssociationIterator}}}{TAbstractIntegerMap.GetAssociationIterator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns iterator of associations.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetAssociationIterator: }{\cs31\f2\uldb IMapIterator}{\cs30\v\f2\cf2 IMapIterator}{\cs22\f2 ; }{\cs29\b\f2 virtual; abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Returns iterator that can access every key and item in sequence.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetIterator}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetIterator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetIterator}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetIterator}}}{TAbstractIntegerMap.GetIterator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns iterator.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetIterator: }{\cs31\f2\uldb IIterator}{\cs30\v\f2\cf2 IIterator}{\cs22\f2 ; }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns iterator that can access every item in sequence.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetKeyPosition}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetKeyPosition}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetKeyPosition}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetKeyPosition}}}{TAbstractIntegerMap.GetKeyPosition
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Template for searching and checking duplicates.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetKeyPosition(}{\cs29\b\f2 const}{\cs22\f2  Key: Integer): }{\cs31\f2\uldb TCollectionPosition}{\cs30\v\f2\cf2 TCollectionPosition}{\cs22\f2 ; }{
\cs29\b\f2 virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Returns subclass-specific, collection position for of item determined by its key.  Used for searching and checking duplicates.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetKeys}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetKeys}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetKeys}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetKeys}}}{TAbstractIntegerMap.GetKeys
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns keys in collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetKeys: }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns all keys found in collection as a set of }{\cs26\uldb TIntegerWrapper}{\cs28\v\cf2 TIntegerWrapper}{ instances.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetMapIterator}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetMapIterator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetMapIterator}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetMapIterator}}}{TAbstractIntegerMap.GetMapIterator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns iterator for key-value pairs.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetMapIterator: }{\cs31\f2\uldb IIntegerMapIterator}{\cs30\v\f2\cf2 IIntegerMapIterator}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns iterator that can access every key and item in sequence.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetNaturalItemIID}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetNaturalItemIID}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetNaturalItemIID}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetNaturalItemIID}}}{TAbstractIntegerMap.GetNaturalItemIID
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Identifies natural interface.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetNaturalItemIID: TGUID; }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns constant }{\i IntegerMappableIID}{ meaning natural items must implement }{\cs26\uldb IIntegerMappable}{\cs28\v\cf2 IIntegerMappable}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetType}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetType}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetType}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetType}}}{TAbstractIntegerMap.GetType
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns type of collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetType: }{\cs31\f2\uldb TCollectionType}{\cs30\v\f2\cf2 TCollectionType}{\cs22\f2 ; }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns }{\i ctIntegerMap}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_GetValues}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap GetValues}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetValues}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_GetValues}}}{TAbstractIntegerMap.GetValues
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns items in collection as a set.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetValues: }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns all items in collection.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_InitFrom}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap InitFrom}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ InitFrom}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_InitFrom}}}{TAbstractIntegerMap.InitFrom
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Copies configuration from collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 procedure}{\cs22\f2  InitFrom(}{\cs29\b\f2 const}{\cs22\f2  Collection: }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{\cs22\f2 ); }{\cs29\b\f2 override}{
\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Used during construction.  Copies comparator and ignore error flag from collection.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Put(ICollection)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Put(ICollection)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Put;Put(ICollection)}
}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Put}}}{TAbstractIntegerMap.Put(ICollection)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all supplied, natural items at their key position, replacing any existing items.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Put(}{\cs29\b\f2 const}{\cs22\f2  Collection: }{\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{\cs22\f2 ): }{\cs31\f2\uldb ICollection}{
\cs30\v\f2\cf2 ICollection}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all natural items with their natural keys, replacing any existing items with the same key.  Returns any items that were replaced.  Throws }{\cs26\uldb ECollectionError}{
\cs28\v\cf2 ECollectionError}{ if item is non-natural.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Put(IIntegerMap)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Put(IIntegerMap)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Put;Put(IIntegerMap)}
}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Put}}}{TAbstractIntegerMap.Put(IIntegerMap)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all supplied items at their key positions, replacing any existing items there.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Put(}{\cs29\b\f2 const}{\cs22\f2  Map: }{\cs31\f2\uldb IIntegerMap}{\cs30\v\f2\cf2 IIntegerMap}{\cs22\f2 ): }{\cs31\f2\uldb ICollection}{
\cs30\v\f2\cf2 ICollection}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all items with their associated keys, replacing any existing items with the same key. Returns any items that were replaced.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 
ECollectionError}{ if item is non-natural and collection is natural, or key is non-natural and collection is natural-keys.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Put(Item)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Put(Item)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Put;Put(Item)}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Put}}}{TAbstractIntegerMap.Put(Item)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds natural item at its key position, replacing any existing item there.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Put(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): }{\cs31\f2\uldb ICollectable}{
\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds natural item with its natural key, replacing any existing item with the same key.  Returns the item that was replaced, if any and not automatically des
troyed, otherwise nil.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{ if item is non-natural.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Put(Key, Item)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Put(Key, Item)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Put;Put(Key, Item)}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Put}}}{TAbstractIntegerMap.Put(Key, Item)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds item at key position, replacing any existing item there.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Put(}{\cs29\b\f2 const}{\cs22\f2  Key: Integer; }{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{
\cs22\f2 ): }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds item with associated key (ignoring the item\rquote 
s key if it is natural), replacing any existing item with the same key.  Returns the item that was replaced, if any and not automatically destroyed, otherwise nil.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{
 if item is non-natural and collection is natural, or key is non-natural and collection is natural-keys.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_Put(Array)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap Put(Array)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Put;Put(Array)}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_Put}}}{TAbstractIntegerMap.Put(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all supplied items at their key positions, replacing any existing items there.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Put(}{\cs29\b\f2 const}{\cs22\f2  ItemArray: }{\cs29\b\f2 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): }{
\cs31\f2\uldb ICollection}{\cs30\v\f2\cf2 ICollection}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds all items with their associated keys, replacing any existing items with the same key. Returns any items that were replaced.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 
ECollectionError}{ if item is non-natural and collection is natural, or key is non-natural and collection is natural-keys.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_RemoveKey(Key)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap RemoveKey(Key)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 RemoveKey;RemoveKey(Key)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_ RemoveKey}}}{TAbstractIntegerMap.RemoveKey(Key)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes item associated with supplied key.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  RemoveKey(}{\cs29\b\f2 const}{\cs22\f2  Key: Integer): }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; }{\cs29\b\f2 virtual}{
\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes item associated with key. This can fail if:-
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {
Collection is of fixed size.
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par Returns removed item, if any and not automatically destroyed, otherwise nil.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{ if key is non-natural and collection is natural-keys.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_RemoveKey(Array)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap RemoveKey(Array)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 RemoveKey;RemoveKey(Array)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_RemoveKey}}}{TAbstractIntegerMap.RemoveKey(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes all items with supplied keys.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  RemoveKey(}{\cs29\b\f2 const}{\cs22\f2  KeyArray: }{\cs29\b\f2 array of}{\cs22\f2  Integer): Integer; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes all items associated with supplied keys.  Returns number of items removed.  Throws }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{
 if any key is non-natural and collection is natural-keys.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_RetainKey(Array)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap RetainKey(Array)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 RetainKey;RetainKey(Array)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_RetainKey}}}{TAbstractIntegerMap.RetainKey(Array)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Keeps items in collection associated with keys that are found in parameter.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  RetainKey(}{\cs29\b\f2 const}{\cs22\f2  ItemArray: }{\cs29\b\f2 array of}{\cs22\f2  }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{
\cs22\f2 ): Integer; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes all items from collection except those with keys that match any key in supplied array, according to collection comparator.  See }{\cs26\uldb RemoveKey}{\cs28\v\cf2 
TAbstractIntegerMap_RemoveKey(Key)}{ for reasons why items can be rejected.
\par 
\par Returns number of items removed.  Can throw }{\cs26\uldb ECollectionError}{\cs28\v\cf2 ECollectionError}{.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TrueAdd}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TrueAdd}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TrueAdd}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TrueAdd}}}{TAbstractIntegerMap.TrueAdd
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds item at appropriate position.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TrueAdd(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Boolean; }{\cs29\b\f2 override}{
\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Adds item at appropriate place in collection.  Fails if existing item has the same key.  Returns true if successful.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TrueContains}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TrueContains}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TrueContains}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TrueContains}}}{TAbstractIntegerMap.TrueContains
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Whether item is found in map.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TrueContains(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Boolean; }{\cs29\b\f2 override}
{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns true if item is found in map.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TrueGet}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TrueGet}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TrueGet}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TrueGet}}}{TAbstractIntegerMap.TrueGet
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Retrieves association at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TrueGet(Position: }{\cs31\f2\uldb TCollectionPosition}{\cs30\v\f2\cf2 TCollectionPosition}{\cs22\f2 ): }{\cs31\f2\uldb IIntegerAssociation}{
\cs30\v\f2\cf2 IIntegerAssociation}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Retrieves association at subclass-specific postion.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TruePut}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TruePut}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TruePut}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TruePut}}}{TAbstractIntegerMap.TruePut
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Adds or replaces association at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TruePut(}{\f2 Position: }{\cs31\f2\uldb TCollectionPosition}{\cs30\v\f2\cf2 TCollectionPosition}{\f2 ; Association: }{\cs31\f2\uldb IIntegerAssociation
}{\cs30\v\f2\cf2 IIntegerAssociation}{\cs22\f2 ): }{\cs31\f2\uldb IAssociation}{\cs30\v\f2\cf2 IAssociation}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected. Adds association, replacing any existing item with the same key.  Returns the association that was replaced, if any, otherwise nil.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TrueRemove}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TrueRemove}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TrueRemove}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TrueRemove}}}{TAbstractIntegerMap.TrueRemove
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes item.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TrueRemove(}{\cs29\b\f2 const}{\cs22\f2  Item: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): }{\cs31\f2\uldb ICollectable}{
\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ; }{\cs29\b\f2 override}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Removes item and returns it, if any, otherwise nil.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractIntegerMap_TrueRemove2}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractIntegerMap TrueRemove2}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TrueRemove2}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractIntegerMap_TrueRemove2}}}{TAbstractIntegerMap.TrueRemove2
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractIntegerMap}{\cs24\v\fs16\cf2 TAbstractIntegerMap}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Removes association at position.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  TrueRemove2(}{\f2 Position: }{\cs31\f2\uldb TCollectionPosition}{\cs30\v\f2\cf2 TCollectionPosition}{\cs22\f2 ): }{\cs31\f2\uldb IIntegerAssociation}{
\cs30\v\f2\cf2 IIntegerAssociation}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Protected.  Removes association at subclass-specific position.  Returns association that was removed.
\par 
\par }}
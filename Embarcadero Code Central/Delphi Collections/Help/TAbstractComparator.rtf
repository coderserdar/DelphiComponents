{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f16\froman\fcharset238\fprq2 Times New Roman CE;}{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f22\fswiss\fcharset238\fprq2 Arial CE;}{\f23\fswiss\fcharset204\fprq2 Arial Cyr;}{\f25\fswiss\fcharset161\fprq2 Arial Greek;}
{\f26\fswiss\fcharset162\fprq2 Arial Tur;}{\f27\fswiss\fcharset186\fprq2 Arial Baltic;}{\f28\fmodern\fcharset238\fprq1 Courier New CE;}{\f29\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f31\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f32\fmodern\fcharset162\fprq1 Courier New Tur;}{\f33\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive \f1\fs16\uldb \sbasedon10 
SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright 
\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 \additive \f1\fs16\ul \sbasedon17 
SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 WindowLink Display;}{
\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 \additive 
\v\f2\fs20\cf2 \sbasedon10 Code WindowLink Data;}{\*\cs31 \additive \f2\fs20\uldb \sbasedon10 Code WindowLink Display;}}{\info{\title Classname}{\author Matthew Greet}{\operator Matthew Greet}{\creatim\yr2003\mo1\dy25\min56}
{\revtim\yr2003\mo4\dy5\hr15\min57}{\version61}{\edmins68}{\nofpages11}{\nofwords960}{\nofchars5473}{\*\company  }{\nofcharsws6721}{\vern71}}\paperw28350\paperh28350\margl0\margr0\margt0\margb0 
\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template D:\\Projects\\WinHelp Templates\\Working\\Delphi Class.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{
 TAbstractComparator Class}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TAbstractComparator;Comparator}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\cs19\super A}{ TAbstractComparator}}}{TAbstractComparator}{\cs24 
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs23\fs16\ul Hierarchy}{\cs25\v\fs16\ul\cf2 TAbstractComparator_Hierarchy}{        }{\cs17\fs16\uldb Methods}{\cs24\v\fs16\cf2 TAbstractComparator_Methods_ByObj >Inspect}{
\cs17\fs16\uldb 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Abstract, base class for comparators.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Unit
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Collections
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Abstract, base class for constructors and factory for Default and natural comparator instances.
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_Hierarchy}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator Hierarchy}}}{Hierarchy
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par TObject
\par 
\par TInterfacedObject
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Interfaces
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }{\cs26\uldb IComparator}{\cs28\v\cf2 IComparator>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_Methods_ByObj}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator Methods}}}{TAbstractComparator methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 TAbstractComparator_Methods_Alpha
}{        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In TAbstractComparator
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Compare}{\cs28\v\cf2 TAbstractComparator_Compare>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractComparator_Equals>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals(Comparator)}{\cs28\v\cf2 TAbstractComparator_Equals(Comparator)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDefaultComparator}{\cs28\v\cf2 TAbstractComparator_GetDefaultComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractComparator_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalComparator}{\cs28\v\cf2 TAbstractComparator_GetNaturalComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetReverseNaturalComparator}{\cs28\v\cf2 TAbstractComparator_GetReverseNaturalComparator>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TInterfacedObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}_AddRef
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}AfterConstruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}BeforeConstruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Create
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_Methods_Alpha}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator Methods}}}{TAbstractComparator methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 TAbstractComparator_Methods_ByObj}{
        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}AfterConstruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}BeforeDestruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Compare}{\cs28\v\cf2 TAbstractComparator_Compare>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Create
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractComparator_Equals>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals(Comparator)}{\cs28\v\cf2 TAbstractComparator_Equals(Comparator)>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDefaultAbstractComparator}{\cs28\v\cf2 TAbstractComparator_GetDefaultComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractComparator_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalComparator}{\cs28\v\cf2 TAbstractComparator_GetNaturalComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetReverseNaturalComparator}{\cs28\v\cf2 TAbstractComparator_GetReverseNaturalComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_Compare}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator Compare}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Compare}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_Compare}}}{TAbstractComparator.Compare
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Abstract method to sort items.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Compare(}{\cs29\b\f2 const}{\cs22\f2  Item1, Item2: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Integer; }{\cs29\b\f2 
virtual}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Implementing classes return \endash 1 if }{\i Item1}{ is less than }{\i Item2}{, 1 if }{\i Item1}{ is greater than }{\i Item2}{ or 0 if they are equal.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_Equals}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator Equals}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Equals}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_Equals}}}{TAbstractComparator.Equals
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Abstract method determines if objects are equal.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Equals(}{\cs29\b\f2 const}{\cs22\f2  Item1, Item2: }{\cs31\f2\uldb ICollectable}{\cs30\v\f2\cf2 ICollectable}{\cs22\f2 ): Boolean; }{\cs29\b\f2 virtual
}{\cs22\f2 ; }{\cs29\b\f2 abstract}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Implementing classes returns true if }{\i Item1}{ is equal to }{\i Item2}{ in value.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ }{TAbstract}{Comparator_Equals(Comparator)}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ }{TAbstract}{Comparator Equals}{(Comparator)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 Equals;Equals}{(Comparator)}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ }{TAbstract}{Comparator_Equals}}}{TAbstract}{Comparator.Equals(Comparator)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstract}{\cs17\fs16\uldb Comparator}{\cs24\v\fs16\cf2 TAbstract}{\cs24\v\fs16\cf2 Comparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Whether comparators behave the same.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Equals(}{\cs29\b\f2 const}{\cs22\f2  Comparator: }{\cs31\f2\uldb IComparator}{\cs30\v\f2\cf2 IComparator}{\cs22\f2 ): Boolean;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns true if }{\i Comparator}{ will always produce the same results as self for any two items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_GetDefaultComparator}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator GetDefaultComparator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 GetDefaultComparator}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_GetDefaultComparator}}}{TAbstractComparator.GetDefaultComparator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns instance of object reference comparator.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 class function}{\cs22\f2  GetDefaultComparator: }{\cs31\f2\uldb IComparator}{\cs30\v\f2\cf2 IComparator}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {This class function returns a singleton instance of }{\cs26\uldb TDefaultComparator}{\cs28\v\cf2 TDefaultComparator}{
, which is the Default comparator for non-natural collections and compares objects by its object reference, rather than any intrinsic value.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_GetInstance}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator GetInstance}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ GetInstance}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_GetInstance}}}{TAbstractComparator.GetInstance
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns comparator object reference.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  GetInstance: TObject;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns comparator as object reference.  This can be used to access implementation specific methods.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_GetNaturalComparator}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator GetNaturalComparator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 GetNaturalComparator}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_GetNaturalComparator}}}{TAbstractComparator.GetNaturalComparator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns instance of natural item comparator.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 class function}{\cs22\f2  GetNaturalComparator: }{\cs31\f2\uldb IComparator}{\cs30\v\f2\cf2 IComparator}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {This class function returns a singleton instance of }{\cs26\uldb TNaturalComparator}{\cs28\v\cf2 TNaturalComparator}{
, which is the Default comparator for natural collections and uses item\rquote s built-in comparison functions.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractComparator_GetReverseNaturalComparator}}$
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractComparator GetReverseNaturalComparator}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{
 GetReverseNaturalComparator}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractComparator_GetReverseNaturalComparator}}}{TAbstractComparator.GetReverseNaturalComparator
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractComparator}{\cs24\v\fs16\cf2 TAbstractComparator}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns instance of natural item comparator.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 class function}{\cs22\f2  GetReverseNaturalComparator: }{\cs31\f2\uldb IComparator}{\cs30\v\f2\cf2 IComparator}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {This class function returns a singleton instance of }{\cs26\uldb TReverseNaturalComparator}{\cs28\v\cf2 TReverseNaturalComparator}{.
\par 
\par }}
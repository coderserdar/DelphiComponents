{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f153\froman\fcharset238\fprq2 Times New Roman CE;}{\f154\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f156\froman\fcharset161\fprq2 Times New Roman Greek;}{\f157\froman\fcharset162\fprq2 Times New Roman Tur;}{\f158\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f159\fswiss\fcharset238\fprq2 Arial CE;}{\f160\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f162\fswiss\fcharset161\fprq2 Arial Greek;}{\f163\fswiss\fcharset162\fprq2 Arial Tur;}{\f164\fswiss\fcharset186\fprq2 Arial Baltic;}{\f165\fmodern\fcharset238\fprq1 Courier New CE;}{\f166\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f168\fmodern\fcharset161\fprq1 Courier New Greek;}{\f169\fmodern\fcharset162\fprq1 Courier New Tur;}{\f170\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive 
Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive 
\f1\fs16\uldb \sbasedon10 SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar
\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 
\additive \f1\fs16\ul \sbasedon17 SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 
WindowLink Display;}{\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 
\additive \v\f2\fs20\cf2 \sbasedon10 Code WindowLink Data;}{\*\cs31 \additive \f2\fs20\uldb \sbasedon10 Code WindowLink Display;}}{\*\listtable{\list\listtemplateid134807553\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1695417837}}{\*\listoverridetable{\listoverride\listid1695417837\listoverridecount0\ls1}}{\info{\title Classname}{\author Matthew Greet}
{\operator Matthew Greet}{\creatim\yr2003\mo1\dy25\hr18\min44}{\revtim\yr2003\mo4\dy22\hr12\min48}{\version84}{\edmins34}{\nofpages8}{\nofwords2451}{\nofchars13974}{\*\company  }{\nofcharsws0}{\vern71}}\paperw28350\paperh28350\margl0\margr0\margt0\margb0 
\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template D:\\Projects\\WinHelp Templates\\Working\\Delphi Interfaced Class.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright 
\f1\fs20\lang2057\cgrid {\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{
 TAbstractBagWrapper Class}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ TAbstractBagWrapper;Bag}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\cs19\super A}{ TAbstractBagWrapper}}}{TAbstractBagWrapper}{\cs24 
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs23\fs16\ul Hierarchy}{\cs25\v\fs16\ul\cf2 TAbstractBagWrapper_Hierarchy}{        }{\cs17\fs16\uldb Properties}{\cs24\v\fs16\cf2 
TAbstractBagWrapper_Properties_ByObj>Inspect}{        }{\cs17\fs16\uldb Methods}{\cs24\v\fs16\cf2 TAbstractBagWrapper_Methods_ByObj >Inspect}{\cs17\fs16\uldb 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Base class for overriding bag behaviour.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Unit
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {CollWrappers
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Base class that implements }{\cs26\uldb IBag}{\cs28\v\cf2 IBag}{ and passes most function calls to a contained interface reference to }{\i IBag}{
.  This allows methods to be overridden and is preferable to subclassing implementation classes such as }{\cs26\uldb TPArrayBag}{\cs28\v\cf2 TPArrayBag}{ as this applies to any collection.  Also, methods that accept multiple items, such as }{\cs26\uldb 
Add(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Array)}{ and }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(ICollection)}{, are diverted to the single item version.  This also applies to overloaded functions such as }{
\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(Filter)}{
.  To change the behaviour of an operation, only the single item or basic version need be overridden.  The single item or basic methods that can be overridden and their affected multiple item or complex versions are:-
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb GetIterator
}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator }{\endash  }{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(Filter)}{ and }{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 
TAbstractCollectionWrapper_GetIterator(FilterFunc)}{.
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb Add(Item)}{
\cs28\v\cf2 TAbstractCollectionWrapper_Add(Item)}{ \endash  }{\cs26\uldb Add(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Array)}{ and }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(ICollection)}{.
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb 
Contains(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Item)}{ \endash  }{\cs26\uldb Contains(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Array)}{ and }{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 
TAbstractCollectionWrapper_Contains(ICollection)}{.
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb 
ItemCount(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_ItemCount(Item)}{ \endash  }{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_ItemCount(Array)}{ and }{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Ite
mCount(ICollection)}{.
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb 
Remove(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Item)}{ \endash  }{\cs26\uldb Remove(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Array)}{ and }{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 
TAbstractCollectionWrapper_Remove(ICollection)}{.
\par {\pntext\pard\plain\cs26\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\cs26\uldb 
RemoveAll(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Item)}{ \endash  }{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Array)}{ and }{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 
TAbstractCollectionWrapper_RemoveAll(ICollection)}{.
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Hierarchy}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Hierarchy}}}{Hierarchy
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb 
\par TObject
\par }{
\par }{\cs26\uldb TInterfacedObject
\par }{
\par }{\cs26\uldb TAbstractCollectionWrapper}{\cs28\v\cf2 TAbstractCollectionWrapper>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Interfaces
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }{\cs26\uldb ICollection}{\cs28\v\cf2 ICollection>main}{
\par 
\par }{\cs26\uldb IBag}{\cs28\v\cf2 IBag>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Properties_ByObj}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Properties}}}{TAbstractBagWrapper properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 
TAbstractBagWrapper_Properties_Alpha}{        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TAbstractCollectionWrapper
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 TAbstractCollectionWrapper_AsArray>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 TAbstractCollectionWrapper_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 TAbstractCollectionWrapper_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 TAbstractCollectionWrapper_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 TAbstractCollectionWrapper_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 TAbstractCollectionWrapper_Size>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TInterfacedObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}RefCount
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Properties_Alpha}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Properties}}}{TAbstractBagWrapper properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 TAbstractBagWrapper_Properties_ByObj}{
        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 TAbstractCollectionWrapper_AsArray>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 TAbstractCollectionWrapper_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 TAbstractCollectionWrapper_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 TAbstractCollectionWrapper_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 TAbstractCollectionWrapper_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}RefCount
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 TAbstractCollectionWrapper_Size>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Methods_ByObj}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Methods}}}{TAbstractBagWrapper methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 TAbstractBagWrapper_Methods_Alpha
}{        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In TAbstractBagWrapper
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(IBag)}{\cs28\v\cf2 TAbstractBagWrapper_Create(IBag)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CloneAsBag}{\cs28\v\cf2 TAbstractBagWrapper_CloneAsBag>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TAbstractCollectionWrapper
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clear}{\cs28\v\cf2 TAbstractCollectionWrapper_Clear>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clone}{\cs28\v\cf2 TAbstractCollectionWrapper_Clone>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CollectionError}{\cs28\v\cf2 TAbstractCollectionWrapper_CollectionError>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(IBag)}{\cs28\v\cf2 TAbstractBagWrapper_Create(IBag)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractCollectionWrapper_Equals>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_Find(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_Find(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_FindAll(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_FindAll(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAsArray}{\cs28\v\cf2 TAbstractCollectionWrapper_GetAsArray>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetComparator}{\cs28\v\cf2 TAbstractCollectionWrapper_GetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDuplicates}{\cs28\v\cf2 TAbstractCollectionWrapper_GetDuplicates>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetFixedSize}{\cs28\v\cf2 TAbstractCollectionWrapper_GetFixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractCollectionWrapper_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 TAbstractCollectionWrapper_GetNaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 TAbstractCollectionWrapper_GetNaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetSize}{\cs28\v\cf2 TAbstractCollectionWrapper_GetSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetType}{\cs28\v\cf2 TAbstractCollectionWrapper_GetType>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsEmpty}{\cs28\v\cf2 TAbstractCollectionWrapper_IsEmpty>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemAllowed}{\cs28\v\cf2 TAbstractCollectionWrapper_ItemAllowed>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 TAbstractCollectionWrapper_IsNaturalItem>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Matching(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Matching(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Retain(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Retain(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetComparator}{\cs28\v\cf2 TAbstractCollectionWrapper_SetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_SetIgnoreErrors>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TInterfacedObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}_AddRef
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}AfterConstruction
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Create
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from TObject
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Methods_Alpha}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Methods}}}{TAbstractBagWrapper methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 TAbstractBagWrapper_Methods_ByObj}{
        }{\cs23\fs16\ul Legend}{\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Add(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Add(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassInfo
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassNameIs
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassParent
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}ClassType
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}CleanupInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clear}{\cs28\v\cf2 TAbstractCollectionWrapper_Clear>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Clone}{\cs28\v\cf2 TAbstractCollectionWrapper_Clone>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CloneAsBag}{\cs28\v\cf2 TAbstractBagWrapper_CloneAsBag>main}{
\par \{bmct Protected.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb CollectionError}{\cs28\v\cf2 TAbstractCollectionWrapper_CollectionError>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Contains(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Contains(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Create(IBag)}{\cs28\v\cf2 TAbstractBagWrapper_Create(IBag)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}DefaultHandler
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Destroy
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Dispatch
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Equals}{\cs28\v\cf2 TAbstractCollectionWrapper_Equals>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FieldAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_Find(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_Find(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_FindAll(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_FindAll(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}Free
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}FreeInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetAsArray}{\cs28\v\cf2 TAbstractCollectionWrapper_GetAsArray>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetComparator}{\cs28\v\cf2 TAbstractCollectionWrapper_GetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetDuplicates}{\cs28\v\cf2 TAbstractCollectionWrapper_GetDuplicates>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetFixedSize}{\cs28\v\cf2 TAbstractCollectionWrapper_GetFixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetInstance}{\cs28\v\cf2 TAbstractCollectionWrapper_GetInstance>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceEntry
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}GetInterfaceTable
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(Filter)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 TAbstractCollectionWrapper_GetIterator(FilterFunc)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 TAbstractCollectionWrapper_GetNaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 TAbstractCollectionWrapper_GetNaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetSize}{\cs28\v\cf2 TAbstractCollectionWrapper_GetSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb GetType}{\cs28\v\cf2 TAbstractCollectionWrapper_GetType>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InheritsFrom
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InitInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}InstanceSize
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsEmpty}{\cs28\v\cf2 TAbstractCollectionWrapper_IsEmpty>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemAllowed}{\cs28\v\cf2 TAbstractCollectionWrapper_ItemAllowed>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2  TAbstractCollectionWrapper_ItemCount(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 TAbstractCollectionWrapper_IsNaturalItem>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Matching(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Matching(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Matching(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodAddress
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}MethodName
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}NewInstance
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}QueryInterface
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}_Release
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Remove(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Remove(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Item)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_RemoveAll(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 TAbstractCollectionWrapper_Retain(ICollection)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Retain(Array)}{\cs28\v\cf2 TAbstractCollectionWrapper_Retain(Array)>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}SafeCallException
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetComparator}{\cs28\v\cf2 TAbstractCollectionWrapper_SetComparator>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 TAbstractCollectionWrapper_SetIgnoreErrors>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_CloneAsBag}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper CloneAsBag}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ CloneAsBag}}A{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractBagWrapper_CloneAsBag}}}{TAbstractBagWrapper.CloneAsBag
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates duplicate of collection.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  CloneAsBag: }{\cs31\f2\uldb IBag}{\cs30\v\f2\cf2 IBag}{\cs22\f2 ; }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns a shallow copy of collection containing current items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ TAbstractBagWrapper_Create(IBag)}}${\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ TAbstractBagWrapper Create(IBag)}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Create;Create(IBag)}}A
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ TAbstractBagWrapper_Create}}}{TAbstractSetWrapper.Create(IBag)
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb TAbstractBagWrapper}{\cs24\v\fs16\cf2 TAbstractBagWrapper}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Constructor using existing bag.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 constructor}{\cs22\f2  Create(}{\cs29\b\f2 const}{\cs22\f2  RealBag: }{\cs31\f2\uldb IBag}{\cs30\v\f2\cf2 IBag}{\cs22\f2 ); }{\cs29\b\f2 virtual}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates bag wrapper containing }{\i RealBag}{.
\par 
\par }}
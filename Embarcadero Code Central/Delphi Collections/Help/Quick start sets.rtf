{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f84\froman\fcharset238\fprq2 Times New Roman CE;}{\f85\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f87\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f88\froman\fcharset162\fprq2 Times New Roman Tur;}{\f89\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f90\fswiss\fcharset238\fprq2 Arial CE;}{\f91\fswiss\fcharset204\fprq2 Arial Cyr;}{\f93\fswiss\fcharset161\fprq2 Arial Greek;}
{\f94\fswiss\fcharset162\fprq2 Arial Tur;}{\f95\fswiss\fcharset186\fprq2 Arial Baltic;}{\f96\fmodern\fcharset238\fprq1 Courier New CE;}{\f97\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f99\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f100\fmodern\fcharset162\fprq1 Courier New Tur;}{\f101\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive \f1\fs16\uldb \sbasedon10 
SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright 
\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 \additive \f1\fs16\ul \sbasedon17 
SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 WindowLink Display;}{
\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 \additive 
\f2\fs20\cf9\nosupersub \sbasedon10 Code Comment;}}{\info{\title Classname}{\author Matthew Greet}{\operator Matthew Greet}{\creatim\yr2004\mo2\dy10\hr18\min27}{\revtim\yr2004\mo2\dy11\hr14\min10}{\version24}{\edmins36}{\nofpages1}{\nofwords2}
{\nofchars15}{\*\company  }{\nofcharsws0}{\vern71}}\paperw11907\paperh16840\margl0\margr0\margt0\margb0 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template 
D:\\Projects\\WinHelp Templates\\Working\\Basic Page.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ Quick start sets}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ Quick start 
\endash  sets}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Quick start;Sets}}}{ Quick start \endash  sets}{\cs24 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {The example below demonstrates a non-natural set is shown below.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\cs29\f2\lang1024 uses
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs22\f2\lang1024     Collections, CollList;
\par }{\cs22\b\f2\lang1024 \'85}{\cs22\f2\lang1024 
\par }{\lang1024 
\par }{\cs29\b\f2\lang1024 var
\par }{\cs22\f2\lang1024     Universe: ISet;
\par     MySet: ISet;
\par     Iterator: Iiterator;
\par }{\cs29\b\f2\lang1024 begin
\par }{\cs22\f2     }{\cs30\f2\cf9 // Creates and populates master set or universe
\par }{\cs22\f2\lang1024     Universe := TListSet.Create;
\par     Universe.Add(TMyMember.Create(Whatever1) }{\cs29\b\f2\lang1024 as}{\cs22\f2\lang1024  ICollectable);
\par     Universe.Add(TMyMember.Create(Whatever2) }{\cs29\b\f2\lang1024 as}{\cs22\f2\lang1024  ICollectable);
\par     }{\cs22\b\f2\lang1024 \'85
\par }{\cs22\f2\lang1024     }{\cs30\f2\cf9 // Creates set and adds only selected items from master set
\par }{\cs22\f2\lang1024     MySet := TListSet.Create;
\par     Iterator := Universe.GetIterator;
\par     }{\cs29\b\f2\lang1024 while}{\cs22\f2\lang1024  }{\cs29\b\f2\lang1024 not}{\cs22\f2\lang1024  Iterator.EOF }{\cs29\b\f2\lang1024 do}{\cs22\f2\lang1024 
\par     }{\cs29\b\f2\lang1024 begin
\par }{\cs22\f2\lang1024         }{\cs29\b\f2\lang1024 if}{\cs22\f2\lang1024  SomeCondition }{\cs29\b\f2\lang1024 then}{\cs22\f2\lang1024 
\par         }{\cs29\b\f2\lang1024 begin
\par }{\cs22\f2\lang1024             MySet.Add(Iterator.CurrentItem);
\par         }{\cs29\b\f2\lang1024 end}{\cs22\f2\lang1024 ;
\par         Iterator.Next;
\par     }{\cs29\b\f2\lang1024 end}{\cs22\f2\lang1024 ;
\par     }{\cs22\b\f2\lang1024 \'85
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs22\f2\lang1024     }{\cs30\f2\cf9 // Does something if member of universe also found in set
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs22\f2\lang1024     Iterator := Universe.GetIterator;
\par }{\cs22\f2     }{\cs29\b\f2\lang1024 while}{\cs22\f2\lang1024  }{\cs29\b\f2\lang1024 not}{\cs22\f2\lang1024  Iterator.EOF }{\cs29\b\f2\lang1024 do}{\cs22\f2\lang1024 
\par     }{\cs29\b\f2\lang1024 begin
\par }{\cs22\f2\lang1024         }{\cs29\b\f2\lang1024 if}{\cs22\f2\lang1024  MySet.Contains(Iterator.CurrentItem) }{\cs29\b\f2\lang1024 then}{\cs22\f2\lang1024 
\par         }{\cs29\b\f2\lang1024 begin
\par }{\cs22\f2\lang1024             }{\cs30\f2\cf9 // Do something
\par }{\cs22\b\f2\lang1024             \'85
\par }{\cs22\f2\lang1024         }{\cs29\b\f2\lang1024 end}{\cs22\f2\lang1024 ;
\par         Iterator.Next;
\par     }{\cs29\b\f2\lang1024 end}{\cs22\f2\lang1024 ;
\par }{\cs22\b\f2\lang1024     }{\cs22\f2 
\par }{
\par 
\par The example below demonstrates a natural set.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\cs29\f2\lang1024 uses
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs22\f2\lang1024     Collections, CollList;
\par }{\cs22\b\f2\lang1024 \'85}{\cs22\f2\lang1024 
\par }{\cs29\b\f2\lang1024 var
\par }{\cs22\f2\lang1024     MySet: ISet;
\par }{\cs29\b\f2\lang1024 Begin
\par }{\cs22\f2     }{\cs30\f2\cf9 // Creates and populates natural set
\par }{\cs22\f2\lang1024     MySet := TListSet.Create(true);
\par     MySet.Add(TMyMember.Create(Whatever1) }{\cs29\b\f2\lang1024 as}{\cs22\f2\lang1024  ICollectable);
\par     MySet.Add(TMyMember.Create(Whatever2) }{\cs29\b\f2\lang1024 as}{\cs22\f2\lang1024  ICollectable);
\par     }{\cs22\b\f2\lang1024 \'85}{\cs22\f2\lang1024 
\par     }{\cs30\f2\cf9 // Does something if member found in set
\par }{\cs22\f2\lang1024     }{\cs29\b\f2\lang1024 if}{\cs22\f2\lang1024  MySet.Contains(TMyMember.Create(Whatever1) }{\cs29\b\f2\lang1024 as}{\cs22\f2\lang1024  ICollectable) then
\par }{\cs29\b\f2\lang1024     begin
\par }{\cs22\f2\lang1024         // Do something
\par }{\cs22\b\f2\lang1024         \'85
\par }{\cs22\f2\lang1024     }{\cs29\b\f2\lang1024 end}{\cs22\f2\lang1024 ;
\par }{\cs22\f2     
\par }{
\par 
\par 
\par }}
{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f166\froman\fcharset238\fprq2 Times New Roman CE;}{\f167\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f169\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f170\froman\fcharset162\fprq2 Times New Roman Tur;}{\f171\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f172\fswiss\fcharset238\fprq2 Arial CE;}{\f173\fswiss\fcharset204\fprq2 Arial Cyr;}{\f175\fswiss\fcharset161\fprq2 Arial Greek;}
{\f176\fswiss\fcharset162\fprq2 Arial Tur;}{\f177\fswiss\fcharset186\fprq2 Arial Baltic;}{\f178\fmodern\fcharset238\fprq1 Courier New CE;}{\f179\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f181\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f182\fmodern\fcharset162\fprq1 Courier New Tur;}{\f183\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \snext0 Normal;}{\s1\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext15 footnote text;}{\s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid \sbasedon0 \snext27 Topic Title;}{\*\cs17 \additive \f1\fs16\uldb \sbasedon10 
SmallWindowLink Display;}{\s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 Heading;}{\*\cs19 \additive \super \sbasedon10 footnote reference;}{\s20\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright 
\f1\fs20\lang2057\cgrid \sbasedon0 \snext0 header;}{\s21\nowidctlpar\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \f2\fs20 \sbasedon10 Code;}{\*\cs23 \additive \f1\fs16\ul \sbasedon17 
SmallPopupLink Display;}{\*\cs24 \additive \v\f1\fs16\cf2 \sbasedon10 SmallWindowLink Data;}{\*\cs25 \additive \v\f1\fs16\ul\cf2 \sbasedon23 SmallPopupLink Data;}{\*\cs26 \additive \f1\fs20\uldb \sbasedon10 WindowLink Display;}{
\s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid \sbasedon0 \snext0 NonScrollable;}{\*\cs28 \additive \v\f1\fs20\cf2 \sbasedon10 WindowLink Data;}{\*\cs29 \additive \b\f2\fs20 \sbasedon10 Code Keyword;}{\*\cs30 \additive 
\v\f2\fs20\cf2 \sbasedon10 Code WindowLink Data;}{\*\cs31 \additive \f2\fs20\uldb \sbasedon10 Code WindowLink Display;}}{\info{\title Classname}{\author Matthew Greet}{\operator Matthew Greet}{\creatim\yr2003\mo1\dy22\hr16\min45}
{\revtim\yr2004\mo5\dy31\hr12}{\version64}{\edmins49}{\nofpages10}{\nofwords985}{\nofchars5617}{\*\company  }{\nofcharsws0}{\vern71}}\paperw28350\paperh28350\margl0\margr0\margt0\margb0 
\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template D:\\Projects\\WinHelp Templates\\Working\\Delphi Interface.dot}{\*\ftnsep \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\chftnsep 
\par }}{\*\ftnsepc \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\chftnsepc 
\par }}{\*\ftncn \pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }}\sectd \psz9\linex0\headery0\footery0\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {
\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet}}${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Class}}K{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ ISet;Set}}A{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ ISet}}}{ISet}{\cs24 
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs23\fs16\ul Hierarchy}{\cs25\v\fs16\ul\cf2 ISet_Hierarchy}{        }{\cs17\fs16\uldb Properties}{\cs24\v\fs16\cf2 ISet_Properties_ByObj>Inspect}{        }{
\cs17\fs16\uldb Methods}{\cs24\v\fs16\cf2 ISet_Methods_ByObj >Inspect}{\cs17\fs16\uldb 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Defines the various addition, removal and search functions of set collections.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Unit
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Collections
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {This interface declares that the implementing class is a set.  Sets do not allow duplicates nor nil.
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Known implementing classes
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb ISet}{\cs28\v\cf2 ISet}{, }{\cs26\uldb THashSet}{\cs28\v\cf2 THashSet}{, }{\cs26\uldb TlistSet}{\cs28\v\cf2 TListSet}{, }{\cs26\uldb TPArraySet}{\cs28\v\cf2 TPArraySet}{

\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Hierarchy}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Hierarchy}}}{Hierarchy
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {IUnknown
\par }{\cs26\uldb 
\par ICollection}{\cs28\v\cf2 ICollection>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Properties_ByObj}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Properties}}}{ISet properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 ISet_Properties_Alpha}{        }{\cs23\fs16\ul Legend}{
\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from ICollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 ICollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 ICollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 ICollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 ICollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 ICollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 ICollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 ICollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 ICollection_Size>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Properties_Alpha}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Properties}}}{ISet properties
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 ISet_Properties_ByObj}{        }{\cs23\fs16\ul Legend}{
\cs25\v\fs16\ul\cf2 Inspector_Legend}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb AsArray}{\cs28\v\cf2 ICollection_AsArray>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Capacity}{\cs28\v\cf2 ICollection_Capacity>main}{
\par }{\{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb Comparator}{\cs28\v\cf2 ICollection_Comparator>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb FixedSize}{\cs28\v\cf2 ICollection_FixedSize>main}{
\par \{bmct Blank.bmp\}\{bmct Blank.bmp\}}{\cs26\uldb IgnoreErrors}{\cs28\v\cf2 ICollection_IgnoreErrors>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemIID}{\cs28\v\cf2 ICollection_NaturalItemIID>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb NaturalItemsOnly}{\cs28\v\cf2 ICollection_NaturalItemsOnly>main}{
\par \{bmct Blank.bmp\}\{bmct ReadOnly.bmp\}}{\cs26\uldb Size}{\cs28\v\cf2 ICollection_Size>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Methods_ByObj}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Methods}}}{ISet methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet>main}{        }{\cs17\fs16\uldb Alphabetically}{\cs24\v\fs16\cf2 ISet_Methods_Alpha}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {In ISet
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb CloneAsSet}{\cs28\v\cf2 ISet_CloneAsSet>main}{
\par }{\cs26\uldb Complement}{\cs28\v\cf2 ISet_Complement>main}{
\par }{\cs26\uldb Intersect}{\cs28\v\cf2 ISet_Intersect>main}{
\par }{\cs26\uldb Union}{\cs28\v\cf2 ISet_Union>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from ICollection
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs26\uldb Add(ICollection)}{\cs28\v\cf2 ICollection_Add(ICollection)>main}{
\par }{\cs26\uldb Add(Item)}{\cs28\v\cf2 ICollection_Add(Item)>main}{
\par }{\cs26\uldb Add(Array)}{\cs28\v\cf2 ICollection_Add(Array)>main}{
\par }{\cs26\uldb Clear}{\cs28\v\cf2 ICollection_Clear>main}{
\par }{\cs26\uldb Clone}{\cs28\v\cf2 ICollection_Clone>main}{
\par }{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 ICollection_Contains(ICollection)>main}{
\par }{\cs26\uldb Contains(Item)}{\cs28\v\cf2 ICollection_Contains(Item)>main}{
\par }{\cs26\uldb Contains(Array)}{\cs28\v\cf2 ICollection_Contains(Array)>main}{
\par }{\cs26\uldb Equals}{\cs28\v\cf2 ICollection_Equals>main}{
\par }{\cs26\uldb Find(Filter)}{\cs28\v\cf2 ICollection_Find(Filter)>main}{
\par }{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 ICollection_Find(FilterFunc)>main}{
\par }{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 ICollection_FindAll(Filter)>main}{
\par }{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 ICollection_FindAll(FilterFunc)>main}{
\par }{\cs26\uldb GetAsArray}{\cs28\v\cf2 ICollection_GetAsArray>main}{
\par }{\cs26\uldb GetCapacity}{\cs28\v\cf2 ICollection_GetCapacity>main}{
\par }{\cs26\uldb GetComparator}{\cs28\v\cf2 ICollection_GetComparator>main}{
\par }{\cs26\uldb GetDuplicates}{\cs28\v\cf2 ICollection_GetDuplicates>main}{
\par }{\cs26\uldb GetFixedSize}{\cs28\v\cf2 ICollection_GetFixedSize>main}{
\par }{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 ICollection_GetIgnoreErrors>main}{
\par }{\cs26\uldb GetInstance}{\cs28\v\cf2 ICollection_GetInstance>main}{
\par }{\cs26\uldb GetIterator}{\cs28\v\cf2 ICollection_GetIterator>main}{
\par }{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 ICollection_GetIterator(Filter)>main}{
\par }{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 ICollection_GetIterator(FilterFunc)>main}{
\par }{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 ICollection_GetNaturalItemIID>main}{
\par }{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 ICollection_GetNaturalItemsOnly>main}{
\par }{\cs26\uldb GetSize}{\cs28\v\cf2 ICollection_GetSize>main}{
\par }{\cs26\uldb GetType}{\cs28\v\cf2 ICollection_GetType>main}{
\par }{\cs26\uldb IsEmpty}{\cs28\v\cf2 ICollection_IsEmpty>main}{
\par }{\cs26\uldb ItemAllowed}{\cs28\v\cf2 ICollection_ItemAllowed>main}{
\par }{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2 ICollection_ItemCount(Array)>main}{
\par }{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2 ICollection_ItemCount(ICollection)>main}{
\par }{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2 ICollection_ItemCount(Item)>main}{
\par }{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 ICollection_IsNaturalItem>main}{
\par }{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 ICollection_Matching(ICollection)>main}{
\par }{\cs26\uldb Matching(Array)}{\cs28\v\cf2 ICollection_Matching(Array)>main}{
\par }{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 ICollection_Remove(ICollection)>main}{
\par }{\cs26\uldb Remove(Item)}{\cs28\v\cf2 ICollection_Remove(Item)>main}{
\par }{\cs26\uldb Remove(Array)}{\cs28\v\cf2 ICollection_Remove(Array)>main}{
\par }{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 ICollection_RemoveAll(ICollection)>main}{
\par }{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 ICollection_RemoveAll(Item)>main}{
\par }{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 ICollection_RemoveAll(Array)>main}{
\par }{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 ICollection_Retain(ICollection)>main}{
\par }{\cs26\uldb Retain(Array)}{\cs28\v\cf2 ICollection_Retain(Array)>main}{
\par }{\cs26\uldb SetCapacity}{\cs28\v\cf2 ICollection_SetCapacity>main}{
\par }{\cs26\uldb SetComparator}{\cs28\v\cf2 ICollection_SetComparator>main}{
\par }{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 ICollection_SetIgnoreErrors>main}{
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Derived from IUnknown
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {QueryInterface
\par AddRef
\par Release
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Methods_Alpha}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Methods}}}{ISet methods
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet>main}{        }{\cs17\fs16\uldb By object}{\cs24\v\fs16\cf2 ISet_Methods_ByObj}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }{\cs26\uldb Add(ICollection)}{\cs28\v\cf2 ICollection_Add(ICollection)>main}{
\par }{\cs26\uldb Add(Item)}{\cs28\v\cf2 ICollection_Add(Item)>main}{
\par }{\cs26\uldb Add(Array)}{\cs28\v\cf2 ICollection_Add(Array)>main}{
\par AddRef
\par }{\cs26\uldb Clear}{\cs28\v\cf2 ICollection_Clear>main}{
\par }{\cs26\uldb Clone}{\cs28\v\cf2 ICollection_Clone>main}{
\par }{\cs26\uldb CloneAsSet}{\cs28\v\cf2 ISet_CloneAsSet>main}{
\par }{\cs26\uldb Complement}{\cs28\v\cf2 ISet_Complement>main}{
\par }{\cs26\uldb Contains(ICollection)}{\cs28\v\cf2 ICollection_Contains(ICollection)>main}{
\par }{\cs26\uldb Contains(Item)}{\cs28\v\cf2 ICollection_Contains(Item)>main}{
\par }{\cs26\uldb Contains(Array)}{\cs28\v\cf2 ICollection_Contains(Array)>main}{
\par }{\cs26\uldb Equals}{\cs28\v\cf2 ICollection_Equals>main}{
\par }{\cs26\uldb Find(Filter)}{\cs28\v\cf2 ICollection_Find(Filter)>main}{
\par }{\cs26\uldb Find(FilterFunc)}{\cs28\v\cf2 ICollection_Find(FilterFunc)>main}{
\par }{\cs26\uldb FindAll(Filter)}{\cs28\v\cf2 ICollection_FindAll(Filter)>main}{
\par }{\cs26\uldb FindAll(FilterFunc)}{\cs28\v\cf2 ICollection_FindAll(FilterFunc)>main}{
\par }{\cs26\uldb GetAsArray}{\cs28\v\cf2 ICollection_GetAsArray>main}{
\par }{\cs26\uldb GetCapacity}{\cs28\v\cf2 ICollection_GetCapacity>main}{
\par }{\cs26\uldb GetComparator}{\cs28\v\cf2 ICollection_GetComparator>main}{
\par }{\cs26\uldb GetDuplicates}{\cs28\v\cf2 ICollection_GetDuplicates>main}{
\par }{\cs26\uldb GetFixedSize}{\cs28\v\cf2 ICollection_GetFixedSize>main}{
\par }{\cs26\uldb GetIgnoreErrors}{\cs28\v\cf2 ICollection_GetIgnoreErrors>main}{
\par }{\cs26\uldb GetInstance}{\cs28\v\cf2 ICollection_GetInstance>main}{
\par }{\cs26\uldb GetIterator}{\cs28\v\cf2 ICollection_GetIterator>main}{
\par }{\cs26\uldb GetIterator(Filter)}{\cs28\v\cf2 ICollection_GetIterator(Filter)>main}{
\par }{\cs26\uldb GetIterator(FilterFunc)}{\cs28\v\cf2 ICollection_GetIterator(FilterFunc)>main}{
\par }{\cs26\uldb GetNaturalItemIID}{\cs28\v\cf2 ICollection_GetNaturalItemIID>main}{
\par }{\cs26\uldb GetNaturalItemsOnly}{\cs28\v\cf2 ICollection_GetNaturalItemsOnly>main}{
\par }{\cs26\uldb GetSize}{\cs28\v\cf2 ICollection_GetSize>main}{
\par }{\cs26\uldb GetType}{\cs28\v\cf2 ICollection_GetType>main}{
\par }{\cs26\uldb Intersect}{\cs28\v\cf2 ISet_Intersect>main}{
\par }{\cs26\uldb IsEmpty}{\cs28\v\cf2 ICollection_IsEmpty>main}{
\par }{\cs26\uldb ItemAllowed}{\cs28\v\cf2 ICollection_ItemAllowed>main}{
\par }{\cs26\uldb ItemCount(Array)}{\cs28\v\cf2 ICollection_ItemCount(Array)>main}{
\par }{\cs26\uldb ItemCount(ICollection)}{\cs28\v\cf2 ICollection_ItemCount(ICollection)>main}{
\par }{\cs26\uldb ItemCount(Item)}{\cs28\v\cf2 ICollection_ItemCount(Item)>main}{
\par }{\cs26\uldb IsNaturalItem}{\cs28\v\cf2 ICollection_IsNaturalItem>main}{
\par }{\cs26\uldb Matching(ICollection)}{\cs28\v\cf2 ICollection_Matching(ICollection)>main}{
\par }{\cs26\uldb Matching(Array)}{\cs28\v\cf2 ICollection_Matching(Array)>main}{
\par QueryInterface
\par Release
\par }{\cs26\uldb Remove(ICollection)}{\cs28\v\cf2 ICollection_Remove(ICollection)>main}{
\par }{\cs26\uldb Remove(Item)}{\cs28\v\cf2 ICollection_Remove(Item)>main}{
\par }{\cs26\uldb Remove(Array)}{\cs28\v\cf2 ICollection_Remove(Array)>main}{
\par }{\cs26\uldb RemoveAll(ICollection)}{\cs28\v\cf2 ICollection_RemoveAll(ICollection)>main}{
\par }{\cs26\uldb RemoveAll(Item)}{\cs28\v\cf2 ICollection_RemoveAll(Item)>main}{
\par }{\cs26\uldb RemoveAll(Array)}{\cs28\v\cf2 ICollection_RemoveAll(Array)>main}{
\par }{\cs26\uldb Retain(ICollection)}{\cs28\v\cf2 ICollection_Retain(ICollection)>main}{
\par }{\cs26\uldb Retain(Array)}{\cs28\v\cf2 ICollection_Retain(Array)>main}{
\par }{\cs26\uldb SetCapacity}{\cs28\v\cf2 ICollection_SetCapacity>main}{
\par }{\cs26\uldb SetComparator}{\cs28\v\cf2 ICollection_SetComparator>main}{
\par }{\cs26\uldb SetIgnoreErrors}{\cs28\v\cf2 ICollection_SetIgnoreErrors>main}{
\par }{\cs26\uldb Union}{\cs28\v\cf2 ISet_Union>main}{
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_CloneAsSet}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet CloneAsSet}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ CloneAsSet}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ ISet_CloneAsSet}}}{ISet.CloneAsSet
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Creates duplicate of set.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  CloneAsSet: }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns a shallow copy of collection containing current items.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Complement}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Complement}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Complement}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ ISet_Complement}}}{ISet.Complement
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns complement of set.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Complement(}{\cs29\b\f2 const}{\cs22\f2  Universe: }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ): }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{
\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns complement of set i.e. all items found in }{\i Universe}{ not found in collection.
\par 
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Intersect}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Intersect}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Intersect}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ ISet_Intersect}}}{ISet.Intersect
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns intersection of self and parameter.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Intersect(}{\cs29\b\f2 const}{\cs22\f2  Set2: }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ): }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{
\cs22\f2 ;
\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns intersection of self and }{\i Set2}{ i.e. only items that are in both self and }{\i Set2}{.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \s16\keepn\nowidctlpar\widctlpar\adjustright \b\f1\lang2057\cgrid {\page }{\cs19\super #{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super #}{ ISet_Union}}${\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super $}{ ISet Union}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super K}{ Union}}A{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs19\super A}{ ISet_Union}}}{ISet.Union
\par }\pard\plain \s27\keepn\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs17\fs16\uldb ISet}{\cs24\v\fs16\cf2 ISet}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns union of self and parameter.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {\cs29\b\f2 function}{\cs22\f2  Union(}{\cs29\b\f2 const}{\cs22\f2  Set2: }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ): }{\cs31\f2\uldb ISet}{\cs30\v\f2\cf2 ISet}{\cs22\f2 ;

\par }{
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \b\f1\fs20\lang2057\cgrid {Description
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f1\fs20\lang2057\cgrid {Returns union of self and }{\i Set2}{ i.e. all items found in either self or }{\i Set2}{.
\par 
\par }}